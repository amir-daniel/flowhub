[{"C:\\Users\\97252\\Documents\\Projects\\river\\src\\index.js":"1","C:\\Users\\97252\\Documents\\Projects\\river\\src\\reportWebVitals.js":"2","C:\\Users\\97252\\Documents\\Projects\\river\\src\\App.js":"3","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\NumberInput.js":"4","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\Timer.js":"5","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\BufferElement.js":"6","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\AnimatedProgressBar.js":"7"},{"size":500,"mtime":1641146692468,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1641146692873,"results":"10","hashOfConfig":"9"},{"size":11881,"mtime":1641903106430,"results":"11","hashOfConfig":"9"},{"size":366,"mtime":1641890596583,"results":"12","hashOfConfig":"9"},{"size":897,"mtime":1641897796241,"results":"13","hashOfConfig":"9"},{"size":1768,"mtime":1641896572805,"results":"14","hashOfConfig":"9"},{"size":141,"mtime":1641894970225,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvy84z",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\97252\\Documents\\Projects\\river\\src\\index.js",[],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\reportWebVitals.js",[],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\App.js",["33","34","35"],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\NumberInput.js",["36"],"/*global chrome*/\r\nimport \"./NumberInput.css\";\r\n\r\nconst NumberInput = (props) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        min={0}\r\n        type=\"number\"\r\n        className={props.className}\r\n        placeholder={props.placeholder}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\Timer.js",["37"],"/*global chrome*/\r\nimport { useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    props.onTick();\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (props.timerID === false) {\r\n      props.modifyTimerID(\r\n        setInterval(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n      if (data.startedRecordingAt !== null && data.savedTime === null) {\r\n        startHandler();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <button\r\n      autoFocus={props.autoFocus}\r\n      onClick={() => {\r\n        if (props.timerID === false) {\r\n          startHandler();\r\n        } else {\r\n          props.onPause();\r\n        }\r\n      }}\r\n    >\r\n      {props.timerID === false ? \"Record\" : \"Pause\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\BufferElement.js",["38","39"],"import { clear } from \"@testing-library/user-event/dist/clear\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./BufferElement.css\";\r\n\r\nconst BufferElement = (props) => {\r\n  let [message, setMessage] = useState(props.isActive);\r\n  let isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    let cleaningTimer;\r\n    if (\r\n      props.isInitializing.current === false &&\r\n      isFirstRender.current === true\r\n    ) {\r\n      // don't show loading screen on first initialization\r\n      isFirstRender.current = false;\r\n      return <></>;\r\n    } else if (props.isInitializing.current === true) {\r\n      return <></>;\r\n    }\r\n    if (props.isActive === false) {\r\n      setMessage(\r\n        <div>\r\n          <svg\r\n            class=\"checkmark\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 52 52\"\r\n          >\r\n            <circle\r\n              class=\"checkmark__circle\"\r\n              cx=\"26\"\r\n              cy=\"26\"\r\n              r=\"25\"\r\n              fill=\"none\"\r\n            />\r\n            <path\r\n              class=\"checkmark__check\"\r\n              fill=\"none\"\r\n              d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      );\r\n      cleaningTimer = setTimeout(() => {\r\n        setMessage(false);\r\n      }, 2000);\r\n    } else {\r\n      setMessage(\r\n        <div className=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      );\r\n    }\r\n    return () => {\r\n      clearTimeout(cleaningTimer);\r\n    };\r\n  }, [props.isActive, props.isInitializing.current]);\r\n  return message;\r\n};\r\n\r\nexport default BufferElement;\r\n","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\AnimatedProgressBar.js",[],{"ruleId":"40","severity":1,"message":"41","line":231,"column":6,"nodeType":"42","endLine":231,"endColumn":57,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":294,"column":9,"nodeType":"46","endLine":294,"endColumn":61},{"ruleId":"44","severity":1,"message":"45","line":297,"column":9,"nodeType":"46","endLine":297,"endColumn":54},{"ruleId":"47","severity":1,"message":"48","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":16},{"ruleId":"40","severity":1,"message":"51","line":25,"column":6,"nodeType":"42","endLine":25,"endColumn":8,"suggestions":"52"},{"ruleId":"47","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"50","endLine":1,"endColumn":15},{"ruleId":"40","severity":1,"message":"55","line":64,"column":6,"nodeType":"42","endLine":64,"endColumn":52,"suggestions":"56"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataState'. Either include it or remove the dependency array. Mutable values like 'dataState.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["57"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","React Hook useEffect has a missing dependency: 'startHandler'. Either include it or remove the dependency array.",["58"],"'clear' is defined but never used.","Identifier","React Hook useEffect has a missing dependency: 'props.isInitializing'. Either include it or remove the dependency array. Mutable values like 'props.isInitializing.current' aren't valid dependencies because mutating them doesn't re-render the component.",["59"],{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [dataState.start, dataState.end, dataState]",{"range":"66","text":"67"},"Update the dependencies array to be: [startHandler]",{"range":"68","text":"69"},"Update the dependencies array to be: [props.isActive, props.isInitializing]",{"range":"70","text":"71"},[6939,6990],"[dataState.start, dataState.end, dataState]",[560,562],"[startHandler]",[1662,1708],"[props.isActive, props.isInitializing]"]