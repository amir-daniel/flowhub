[{"C:\\Users\\97252\\Documents\\Projects\\river\\src\\index.js":"1","C:\\Users\\97252\\Documents\\Projects\\river\\src\\reportWebVitals.js":"2","C:\\Users\\97252\\Documents\\Projects\\river\\src\\App.js":"3","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\ItemData.js":"4","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\Timer.js":"5","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\AnimatedCounter.js":"6"},{"size":500,"mtime":1641146692468,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1641146692873,"results":"9","hashOfConfig":"8"},{"size":4358,"mtime":1641674227815,"results":"10","hashOfConfig":"8"},{"size":6930,"mtime":1641675189377,"results":"11","hashOfConfig":"8"},{"size":2135,"mtime":1641650627030,"results":"12","hashOfConfig":"8"},{"size":2034,"mtime":1641326245950,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvy84z",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"C:\\Users\\97252\\Documents\\Projects\\river\\src\\index.js",[],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\reportWebVitals.js",[],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\App.js",["29","30","31"],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\ItemData.js",["32","33"],"C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\Timer.js",["34"],"/*global chrome*/\r\nimport { useEffect } from \"react\";\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    props.onTick();\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (props.timerID.current === false) {\r\n      props.modifyTimerID(\r\n        setInterval(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n        if (data.startedRecordingAt === null && data.savedTime === null) {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now(),\r\n          });\r\n        } else {\r\n          chrome.storage.sync.get([\"startedRecordingAt\"], (data) => {});\r\n\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now() - props.value.current * 1000,\r\n            savedTime: null,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    clearInterval(props.timerID.current);\r\n    props.modifyTimerID(false);\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: props.value.current,\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    // stopHandler(); // pause time recording\r\n    clearInterval(props.timerID.current);\r\n    props.modifyTimerID(false);\r\n    props.onReset(); // remove time recorded -> reset === true\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: null,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n      if (data.startedRecordingAt !== null && data.savedTime === null) {\r\n        startHandler();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <span>\r\n      <button disabled={!props.isResettable} onClick={resetHandler}>\r\n        ⏹️\r\n      </button>\r\n      <button disabled={!props.timerID.current} onClick={stopHandler}>\r\n        ⏸️\r\n      </button>\r\n      <button\r\n        disabled={props.timerID.current !== false || !props.isRecordable}\r\n        // seems somewhat redundant\r\n        onClick={startHandler}\r\n      >\r\n        ▶️\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","C:\\Users\\97252\\Documents\\Projects\\river\\src\\components\\AnimatedCounter.js",["35"],"import react from \"react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nconst AnimatedCounter = (props) => {\r\n  const [getOldValue, setOldValue] = useState(0); //useState(props.value);\r\n  const [timerID, setTimerID] = useState(false);\r\n  let oldValue = useRef();\r\n  oldValue.current = getOldValue;\r\n  const delayInSeconds = 2;\r\n  const refreshPerSecond =\r\n    props.refreshRate === undefined ? 25 : props.refreshRate; // default refresh rate is 25 Hz\r\n  const sign = (number) => (number < 0 ? -1 : 1);\r\n\r\n  const executeTick = (oldVal, incSize) => {\r\n    if (\r\n      (+oldVal + +incSize) * sign(+incSize) >=\r\n      +props.value * sign(+incSize)\r\n    ) {\r\n      // we've finished incrementing, let's reset the timer and oldValue\r\n      setOldValue(props.value);\r\n\r\n      clearTimeout(timerID);\r\n      setTimerID(false);\r\n    } else {\r\n      setOldValue(oldVal + incSize);\r\n\r\n      setTimerID(\r\n        setTimeout(\r\n          () => executeTick(oldVal + incSize, incSize),\r\n          1000 * (1 / refreshPerSecond)\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  let expression;\r\n  if (+oldValue.current !== +props.value && !timerID) {\r\n    // we get new value, set up increment\r\n    let tempInc =\r\n      (+props.value - +oldValue.current) / (delayInSeconds * refreshPerSecond);\r\n    tempInc = props.inc === undefined ? tempInc : props.inc * sign(tempInc);\r\n    // set minimum increment, if defined\r\n    setTimerID(\r\n      setTimeout(\r\n        () => executeTick(oldValue.current + tempInc, tempInc),\r\n        1000 * (1 / refreshPerSecond)\r\n      )\r\n    );\r\n\r\n    expression = Math.floor(100 * (oldValue.current + tempInc)) / 100;\r\n    return (\r\n      (props.callback === undefined\r\n        ? expression\r\n        : props.callback(expression)) || oldValue.current\r\n    );\r\n    // run the callback on expression if defined\r\n  }\r\n\r\n  expression = Math.floor(100 * oldValue.current) / 100;\r\n  return (\r\n    (props.callback === undefined ? expression : props.callback(expression)) ||\r\n    oldValue.current\r\n  );\r\n};\r\n\r\nexport default AnimatedCounter;\r\n",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":96,"column":11,"nodeType":"45","endLine":138,"endColumn":13},{"ruleId":"38","severity":1,"message":"46","line":5,"column":18,"nodeType":"40","messageId":"41","endLine":5,"endColumn":27},{"ruleId":"47","severity":1,"message":"48","line":201,"column":53,"nodeType":"49","messageId":"50","endLine":201,"endColumn":55},{"ruleId":"51","severity":1,"message":"52","line":60,"column":6,"nodeType":"53","endLine":60,"endColumn":8,"suggestions":"54"},{"ruleId":"38","severity":1,"message":"42","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"no-unused-vars","'Timer' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startHandler'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-native-reassign",["60"],"no-negated-in-lhs",["61"],{"desc":"62","fix":"63"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [startHandler]",{"range":"64","text":"65"},[1646,1648],"[startHandler]"]