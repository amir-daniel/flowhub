{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\components\\\\ItemData.js\";\nimport { useState } from \"react\";\nimport styles from \"./ItemData.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemData = props => {\n  const getETA = () => {\n    let totalProgress = props.progress - props.itemMin;\n    let progressLeft = props.itemMax - props.progress;\n    let totalMins = props.time / 60;\n\n    if (props.time < 1 || totalProgress === 0 || !props.timerID && props.itemMax != props.progress) {\n      return \"∞\";\n    }\n\n    if (progressLeft === 0) {\n      if (props.timerID) {\n        clearTimeout(props.timerID);\n        props.setTimerID(false);\n      }\n\n      return \"✅\";\n    }\n\n    const designDigit = num => num < 10 ? \"0\" + num : num;\n\n    let paceInMins = totalProgress / totalMins;\n    let minsPerItem = 1 / paceInMins;\n    let minsLeft = minsPerItem * progressLeft; // let hoursLeft = minsLeft / 60;\n\n    let millisecondsLeft = minsLeft * 60 * 1000;\n    let ETADate = new Date(Date.now() + millisecondsLeft);\n    let dateFormatted = designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\n    return dateFormatted;\n  };\n\n  const getPercentage = () => {\n    let totalProgressMade = props.progress - props.itemMin;\n    let totalProgressPossible = props.itemMax - props.itemMin;\n\n    if (totalProgressPossible === 0) {\n      return 0;\n    }\n\n    return 100 * (totalProgressMade / totalProgressPossible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: props.timerID,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        className: styles.items,\n        min: \"0\",\n        step: \"1\",\n        onChange: props.onMinChange,\n        value: props.itemMin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: event => {\n          props.onCurrentChange(event);\n        },\n        min: \"0\",\n        step: \"1\",\n        value: props.progress,\n        disabled: !props.timerID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: props.onMaxChange,\n        value: props.itemMax,\n        min: \"0\",\n        step: \"1\" // disabled={props.timerID}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.items,\n        onClick: () => {\n          props.onCurrentChange({\n            target: {\n              value: props.progress + 1\n            }\n          });\n        },\n        type: \"submit\",\n        disabled: +props.progress === +props.itemMax,\n        autofocus: \"true\",\n        children: \"\\u2B06\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: props.timerID ? getPercentage() < 100 ? getPercentage() < 50 ? \"rgb(197, 52, 52)\" : \"rgb(243, 247, 46)\" : \"rgb(32, 189, 17)\" : props.progress === props.itemMax && props.itemMax !== 0 ? \"rgb(32, 189, 17)\" : \"rgb(255,255,255)\"\n        },\n        children: [Math.floor(props.time / 60), \" mins. elapsed \\u27F6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), ` ${getETA()}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: styles.progress,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          // onTransitionEnd={() => {\n          //   setIsAnimating(0);\n          // }}\n          className: styles[`progress-value`],\n          style: {\n            width: getPercentage() + \"%\",\n            background: getPercentage() < 100 ? getPercentage() < 50 ? \"rgb(197, 52, 52)\" : \"rgb(243, 247, 46)\" : \"rgb(32, 189, 17)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ItemData;\nexport default ItemData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemData\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/ItemData.js"],"names":["useState","styles","ItemData","props","getETA","totalProgress","progress","itemMin","progressLeft","itemMax","totalMins","time","timerID","clearTimeout","setTimerID","designDigit","num","paceInMins","minsPerItem","minsLeft","millisecondsLeft","ETADate","Date","now","dateFormatted","getHours","getMinutes","getPercentage","totalProgressMade","totalProgressPossible","event","preventDefault","width","items","onMinChange","onCurrentChange","onMaxChange","target","value","color","Math","floor","background"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./ItemData.module.css\";\r\n\r\nconst ItemData = (props) => {\r\n  const getETA = () => {\r\n    let totalProgress = props.progress - props.itemMin;\r\n    let progressLeft = props.itemMax - props.progress;\r\n    let totalMins = props.time / 60;\r\n\r\n    if (\r\n      props.time < 1 ||\r\n      totalProgress === 0 ||\r\n      (!props.timerID && props.itemMax != props.progress)\r\n    ) {\r\n      return \"∞\";\r\n    }\r\n\r\n    if (progressLeft === 0) {\r\n      if (props.timerID) {\r\n        clearTimeout(props.timerID);\r\n        props.setTimerID(false);\r\n      }\r\n      return \"✅\";\r\n    }\r\n\r\n    const designDigit = (num) => (num < 10 ? \"0\" + num : num);\r\n\r\n    let paceInMins = totalProgress / totalMins;\r\n    let minsPerItem = 1 / paceInMins;\r\n    let minsLeft = minsPerItem * progressLeft;\r\n    // let hoursLeft = minsLeft / 60;\r\n    let millisecondsLeft = minsLeft * 60 * 1000;\r\n    let ETADate = new Date(Date.now() + millisecondsLeft);\r\n    let dateFormatted =\r\n      designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\r\n\r\n    return dateFormatted;\r\n  };\r\n\r\n  const getPercentage = () => {\r\n    let totalProgressMade = props.progress - props.itemMin;\r\n    let totalProgressPossible = props.itemMax - props.itemMin;\r\n\r\n    if (totalProgressPossible === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return 100 * (totalProgressMade / totalProgressPossible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(event) => event.preventDefault()}>\r\n        <input\r\n          disabled={props.timerID}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          className={styles.items}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          onChange={props.onMinChange}\r\n          value={props.itemMin}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={(event) => {\r\n            props.onCurrentChange(event);\r\n          }}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          value={props.progress}\r\n          disabled={!props.timerID}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={props.onMaxChange}\r\n          value={props.itemMax}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          // disabled={props.timerID}\r\n        />\r\n        <button\r\n          className={styles.items}\r\n          onClick={() => {\r\n            props.onCurrentChange({ target: { value: props.progress + 1 } });\r\n          }}\r\n          type=\"submit\"\r\n          disabled={+props.progress === +props.itemMax}\r\n          autofocus=\"true\"\r\n        >\r\n          ⬆️\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <span\r\n          style={{\r\n            color: props.timerID\r\n              ? getPercentage() < 100\r\n                ? getPercentage() < 50\r\n                  ? \"rgb(197, 52, 52)\"\r\n                  : \"rgb(243, 247, 46)\"\r\n                : \"rgb(32, 189, 17)\"\r\n              : props.progress === props.itemMax && props.itemMax !== 0\r\n              ? \"rgb(32, 189, 17)\"\r\n              : \"rgb(255,255,255)\",\r\n          }}\r\n        >\r\n          {Math.floor(props.time / 60)} mins. elapsed ⟶\r\n        </span>\r\n        {` ${getETA()}`}\r\n        <br />\r\n        <br />\r\n        <div class={styles.progress}>\r\n          <div\r\n            // onTransitionEnd={() => {\r\n            //   setIsAnimating(0);\r\n            // }}\r\n            className={styles[`progress-value`]}\r\n            style={{\r\n              width: getPercentage() + \"%\",\r\n              background:\r\n                getPercentage() < 100\r\n                  ? getPercentage() < 50\r\n                    ? \"rgb(197, 52, 52)\"\r\n                    : \"rgb(243, 247, 46)\"\r\n                  : \"rgb(32, 189, 17)\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemData;\r\n"]},"metadata":{},"sourceType":"module"}