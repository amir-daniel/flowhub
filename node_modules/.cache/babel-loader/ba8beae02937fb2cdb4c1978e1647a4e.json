{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\components\\\\ItemData.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/*global chrome*/\nimport styles from \"./ItemData.module.css\";\nimport AnimatedCounter from \"./AnimatedCounter\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst playFile = filepath => {\n  var audioPlayer = new Audio(chrome.runtime.getURL(filepath));\n  audioPlayer.play();\n};\n\nconst designDigit = num => num < 10 ? \"0\" + num : num;\n\nconst beautify = time => {\n  time = Math.floor(time); // round time received in seconds\n\n  let sec = designDigit(time % 60);\n  let min = designDigit((time - sec) / 60 % 60);\n  let hr = (time - sec - 60 * min) / 3600;\n  return `${hr}h${min}m${sec}s`;\n};\n\nconst useFocus = () => {\n  _s();\n\n  inputRef = useRef();\n\n  const setFocus = () => inputRef.current && inputRef.current.focus();\n\n  return inputRef, setFocus;\n};\n\n_s(useFocus, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n\nconst ItemData = props => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [inputRef, setFocus] = useFocus();\n\n  const progressHandler = event => {\n    if (+props.itemMax === +event.target.value) {\n      playFile(\"sounds/complete.mp3\");\n      return;\n    }\n\n    playFile(\"sounds/increment.mp3\");\n  };\n\n  const getETA = () => {\n    let totalProgress = props.progress - props.itemMin;\n    let progressLeft = props.itemMax - props.progress;\n    let totalMins = props.time.current / 60;\n\n    if (props.time.current < 1 || totalProgress === 0 || !props.timerID.current && props.itemMax != props.progress) {\n      return \"∞\";\n    }\n\n    if (progressLeft === 0) {\n      if (props.timerID.current) {\n        // come back here and brings this back to life <------------------------------------------\n        clearInterval(props.timerID.current);\n        props.setTimerID(false);\n        chrome.notifications.create(\"\", {\n          title: \"Hi\",\n          message: \"You have completed your quest!\",\n          type: \"basic\"\n        });\n      }\n\n      return \"✅\";\n    }\n\n    let paceInMins = totalProgress / totalMins;\n    let minsPerItem = 1 / paceInMins;\n    let minsLeft = minsPerItem * progressLeft; // let hoursLeft = minsLeft / 60;\n\n    let millisecondsLeft = minsLeft * 60 * 1000;\n    let ETADate = new Date(Date.now() + millisecondsLeft);\n    let dateFormatted = designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\n    return dateFormatted;\n  };\n\n  const getPercentage = () => {\n    let totalProgressMade = props.progress - props.itemMin;\n    let totalProgressPossible = props.itemMax - props.itemMin;\n\n    if (totalProgressPossible === 0) {\n      return 0;\n    }\n\n    return 100 * (totalProgressMade / totalProgressPossible);\n  };\n\n  _s2(useEffect(_s2(() => {\n    _s2();\n\n    useFocus();\n  }, \"1J/iZZoTuZleJu0hUABXgw8fpww=\", false, function () {\n    return [useFocus];\n  }), []), \"1J/iZZoTuZleJu0hUABXgw8fpww=\", false, function () {\n    return [useFocus];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        className: styles.items,\n        min: \"0\",\n        step: \"1\",\n        onChange: props.onMinChange,\n        value: props.itemMin,\n        disabled: props.timerID.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: event => {\n          props.onCurrentChange(event);\n          progressHandler(event);\n        },\n        min: \"0\",\n        step: \"1\",\n        value: props.progress,\n        disabled: props.timerID.current !== false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: props.onMaxChange,\n        value: props.itemMax,\n        min: \"0\",\n        step: \"1\",\n        disabled: props.timerID.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: inputRef,\n        className: styles.items,\n        onClick: () => {\n          props.onCurrentChange({\n            target: {\n              value: props.progress + 1\n            }\n          });\n          progressHandler({\n            target: {\n              value: props.progress + 1\n            }\n          });\n        },\n        type: \"submit\",\n        disabled: +props.progress === +props.itemMax,\n        children: \"\\u2B06\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"0.9em\"\n          },\n          children: [beautify(props.time.current), ` ${props.timerID.current === false ? \"~\" : \"🔴\"} ${getETA()}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: styles.progress,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[`progress-value`],\n          style: {\n            width: getPercentage() + \"%\",\n            background: getPercentage() < 100 ? getPercentage() < 50 ? \"rgb(197, 52, 52)\" : \"rgb(209, 135, 51)\" : \"rgb(32, 189, 17)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimatedCounter, {\n            value: getPercentage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ItemData, \"AUGQOq6eY3hB5s9HD+2UuglplVo=\", false, function () {\n  return [useFocus];\n});\n\n_c = ItemData;\nexport default ItemData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemData\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/ItemData.js"],"names":["styles","AnimatedCounter","useRef","useEffect","playFile","filepath","audioPlayer","Audio","chrome","runtime","getURL","play","designDigit","num","beautify","time","Math","floor","sec","min","hr","useFocus","inputRef","setFocus","current","focus","ItemData","props","progressHandler","event","itemMax","target","value","getETA","totalProgress","progress","itemMin","progressLeft","totalMins","timerID","clearInterval","setTimerID","notifications","create","title","message","type","paceInMins","minsPerItem","minsLeft","millisecondsLeft","ETADate","Date","now","dateFormatted","getHours","getMinutes","getPercentage","totalProgressMade","totalProgressPossible","preventDefault","width","items","onMinChange","onCurrentChange","onMaxChange","fontSize","background"],"mappings":"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","sourcesContent":["/*global chrome*/\r\nimport styles from \"./ItemData.module.css\";\r\nimport AnimatedCounter from \"./AnimatedCounter\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nconst playFile = (filepath) => {\r\n  var audioPlayer = new Audio(chrome.runtime.getURL(filepath));\r\n  audioPlayer.play();\r\n};\r\nconst designDigit = (num) => (num < 10 ? \"0\" + num : num);\r\nconst beautify = (time) => {\r\n  time = Math.floor(time); // round time received in seconds\r\n\r\n  let sec = designDigit(time % 60);\r\n  let min = designDigit(((time - sec) / 60) % 60);\r\n  let hr = (time - sec - 60 * min) / 3600;\r\n\r\n  return `${hr}h${min}m${sec}s`;\r\n};\r\n\r\nconst useFocus = () => {\r\n  inputRef = useRef();\r\n  const setFocus = () => inputRef.current && inputRef.current.focus();\r\n\r\n  return inputRef, setFocus;\r\n};\r\n\r\nconst ItemData = (props) => {\r\n  const [inputRef, setFocus] = useFocus();\r\n\r\n  const progressHandler = (event) => {\r\n    if (+props.itemMax === +event.target.value) {\r\n      playFile(\"sounds/complete.mp3\");\r\n      return;\r\n    }\r\n    playFile(\"sounds/increment.mp3\");\r\n  };\r\n\r\n  const getETA = () => {\r\n    let totalProgress = props.progress - props.itemMin;\r\n    let progressLeft = props.itemMax - props.progress;\r\n    let totalMins = props.time.current / 60;\r\n\r\n    if (\r\n      props.time.current < 1 ||\r\n      totalProgress === 0 ||\r\n      (!props.timerID.current && props.itemMax != props.progress)\r\n    ) {\r\n      return \"∞\";\r\n    }\r\n\r\n    if (progressLeft === 0) {\r\n      if (props.timerID.current) {\r\n        // come back here and brings this back to life <------------------------------------------\r\n        clearInterval(props.timerID.current);\r\n        props.setTimerID(false);\r\n\r\n        chrome.notifications.create(\"\", {\r\n          title: \"Hi\",\r\n          message: \"You have completed your quest!\",\r\n          type: \"basic\",\r\n        });\r\n      }\r\n      return \"✅\";\r\n    }\r\n\r\n    let paceInMins = totalProgress / totalMins;\r\n    let minsPerItem = 1 / paceInMins;\r\n    let minsLeft = minsPerItem * progressLeft;\r\n    // let hoursLeft = minsLeft / 60;\r\n    let millisecondsLeft = minsLeft * 60 * 1000;\r\n    let ETADate = new Date(Date.now() + millisecondsLeft);\r\n    let dateFormatted =\r\n      designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\r\n\r\n    return dateFormatted;\r\n  };\r\n\r\n  const getPercentage = () => {\r\n    let totalProgressMade = props.progress - props.itemMin;\r\n    let totalProgressPossible = props.itemMax - props.itemMin;\r\n\r\n    if (totalProgressPossible === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return 100 * (totalProgressMade / totalProgressPossible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    useFocus();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(event) => event.preventDefault()}>\r\n        <input\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          className={styles.items}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          onChange={props.onMinChange}\r\n          value={props.itemMin}\r\n          disabled={props.timerID.current}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={(event) => {\r\n            props.onCurrentChange(event);\r\n            progressHandler(event);\r\n          }}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          value={props.progress}\r\n          disabled={props.timerID.current !== false}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={props.onMaxChange}\r\n          value={props.itemMax}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          disabled={props.timerID.current}\r\n        />\r\n        <button\r\n          ref={inputRef}\r\n          className={styles.items}\r\n          onClick={() => {\r\n            props.onCurrentChange({ target: { value: props.progress + 1 } });\r\n            progressHandler({ target: { value: props.progress + 1 } });\r\n          }}\r\n          type=\"submit\"\r\n          disabled={+props.progress === +props.itemMax}\r\n        >\r\n          ⬆️\r\n        </button>\r\n        <br />\r\n        <span\r\n\r\n        // style={{\r\n        //   color: props.timerID.current\r\n        //     ? getPercentage() < 100\r\n        //       ? getPercentage() < 50\r\n        //         ? \"rgb(197, 52, 52)\"\r\n        //         : \"rgb(209, 135, 51)\"\r\n        //       : \"rgb(32, 189, 17)\"\r\n        //     : props.progress === props.itemMax && props.itemMax !== 0\r\n        //     ? \"rgb(32, 189, 17)\"\r\n        //     : \"rgb(255,255,255)\",\r\n        // }\r\n        >\r\n          <br />\r\n          <div style={{ fontSize: \"0.9em\" }}>\r\n            {beautify(props.time.current)}\r\n            {` ${props.timerID.current === false ? \"~\" : \"🔴\"} ${getETA()}`}\r\n          </div>\r\n        </span>\r\n        <br />\r\n        <div class={styles.progress}>\r\n          <div\r\n            className={styles[`progress-value`]}\r\n            style={{\r\n              width: getPercentage() + \"%\",\r\n              background:\r\n                getPercentage() < 100\r\n                  ? getPercentage() < 50\r\n                    ? \"rgb(197, 52, 52)\"\r\n                    : \"rgb(209, 135, 51)\"\r\n                  : \"rgb(32, 189, 17)\",\r\n            }}\r\n          >\r\n            <AnimatedCounter value={getPercentage()} />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemData;\r\n"]},"metadata":{},"sourceType":"module"}