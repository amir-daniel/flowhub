{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\components\\\\Timer.js\";\n\n/*global chrome*/\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  var _s = $RefreshSig$();\n\n  const tickHandler = () => {\n    // if (props.timerID !== false) {\n    props.onTick();\n    props.modifyTimerID(setTimeout(() => {\n      tickHandler();\n    }, 1000)); // }\n  };\n\n  const startHandler = () => {\n    if (props.timerID === false) {\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], data => {\n        if (data.startedRecordingAt === null && data.savedTime === null) {\n          chrome.storage.sync.set({\n            startedRecordingAt: Date.now()\n          });\n        } else {\n          chrome.storage.sync.set({\n            startedRecordingAt: Date.now() - props.value * 1000,\n            savedTime: null\n          });\n        }\n      });\n      props.modifyTimerID(setTimeout(() => {\n        tickHandler();\n      }, 1000));\n    }\n  };\n\n  const stopHandler = () => {\n    _s();\n\n    useEffect(() => {\n      clearTimeout(props.timerID);\n      props.modifyTimerID(false);\n      chrome.storage.sync.set({\n        startedRecordingAt: null\n      });\n      chrome.storage.sync.set({\n        savedTime: props.value\n      });\n    }, []); // chrome.storage.sync.set({\n    //   isTimerOn: false,\n    // });\n  };\n\n  _s(stopHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const resetHandler = () => {\n    stopHandler(); // pause time recording\n\n    props.onTick(true); // remove time recorded, reset = true\n\n    chrome.storage.sync.set({\n      startedRecordingAt: null,\n      savedTime: null\n    });\n  };\n\n  if (props.value > 0) {\n    if (!props.timerID) {\n      startHandler();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.value < 1,\n      onClick: resetHandler,\n      children: \"\\u23F9\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !props.timerID,\n      onClick: stopHandler,\n      children: \"\\u23F8\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.timerID,\n      onClick: startHandler,\n      children: \"\\u25B6\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: [props.timerID, \", \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/Timer.js"],"names":["useEffect","Timer","props","tickHandler","onTick","modifyTimerID","setTimeout","startHandler","timerID","chrome","storage","sync","get","data","startedRecordingAt","savedTime","set","Date","now","value","stopHandler","clearTimeout","resetHandler","color"],"mappings":"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","sourcesContent":["/*global chrome*/\r\nimport { useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    // if (props.timerID !== false) {\r\n    props.onTick();\r\n    props.modifyTimerID(\r\n      setTimeout(() => {\r\n        tickHandler();\r\n      }, 1000)\r\n    );\r\n    // }\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (props.timerID === false) {\r\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n        if (data.startedRecordingAt === null && data.savedTime === null) {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now(),\r\n          });\r\n        } else {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now() - props.value * 1000,\r\n            savedTime: null,\r\n          });\r\n        }\r\n      });\r\n\r\n      props.modifyTimerID(\r\n        setTimeout(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n    }\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    useEffect(() => {\r\n      clearTimeout(props.timerID);\r\n      props.modifyTimerID(false);\r\n\r\n      chrome.storage.sync.set({\r\n        startedRecordingAt: null,\r\n      });\r\n\r\n      chrome.storage.sync.set({\r\n        savedTime: props.value,\r\n      });\r\n    }, []);\r\n\r\n    // chrome.storage.sync.set({\r\n    //   isTimerOn: false,\r\n    // });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    stopHandler(); // pause time recording\r\n    props.onTick(true); // remove time recorded, reset = true\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: null,\r\n    });\r\n  };\r\n\r\n  if (props.value > 0) {\r\n    if (!props.timerID) {\r\n      startHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button disabled={props.value < 1} onClick={resetHandler}>\r\n        ⏹️\r\n      </button>\r\n      <button disabled={!props.timerID} onClick={stopHandler}>\r\n        ⏸️\r\n      </button>\r\n      <button disabled={props.timerID} onClick={startHandler}>\r\n        ▶️\r\n      </button>\r\n      <br />\r\n      <div style={{ color: \"white\" }}>\r\n        {props.timerID}, {props.value}\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}