{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/*global chrome*/\nimport \"./App.css\";\nimport NumberInput from \"./components/NumberInput\";\nimport { useState, useEffect, useRef, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ETA Mode (Forward Looking),\n  // Sequential Mode (Time Elapsed)\n  dataReducer = (state, action) => {\n    return \"new state\";\n  };\n\n  let [dataState, dataDispatch] = useReducer(dataReducer, {\n    start: null,\n    current: null,\n    end: null,\n    time: null\n  });\n  let [getUserName, setUserName] = useState(null);\n  let [totalSeconds, setTotalSeconds] = useState(0);\n  useEffect(() => {\n    // initialize some variables from chrome storage\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\", \"start\", \"progress\", \"end\", \"userName\", \"totalSeconds\"], data => {\n      setTime(data.startedRecordingAt === null // check if a recording is in progress\n      ? data.savedTime === null ? 0 : data.savedTime : (Date.now() - data.startedRecordingAt) / 1000);\n    });\n    chrome.storage.sync.get([], data => {\n      setCurrent(data.progress);\n      setEnd(data.end);\n      setStart(data.start);\n      setUserName(data.userName);\n      setTotalSeconds(data.totalSeconds);\n    });\n  }, []);\n\n  const changeHandler = () => {\n    setTime(getTime.current + 1); //update progress values from storage\n\n    chrome.storage.sync.get([\"progress\", \"totalSeconds\"], data => {\n      setCurrent(data.progress);\n      setTotalSeconds(data.totalSeconds + 1);\n      chrome.storage.sync.set({\n        totalSeconds\n      });\n    });\n  };\n\n  const resetHandler = () => {\n    setTime(0);\n    setStart(0);\n    setCurrent(0);\n    setEnd(0);\n    chrome.storage.sync.set({\n      start: 0,\n      progress: 0,\n      end: 0\n    }); // if reset mode requested, reset timer!\n  };\n\n  const minHandler = event => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n      chrome.storage.sync.set({\n        start: +event.target.value\n      });\n    }\n  };\n\n  const currentHandler = event => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n        chrome.storage.sync.set({\n          progress: +event.target.value\n        });\n      }\n    }\n  };\n\n  const maxHandler = event => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n      chrome.storage.sync.set({\n        end: +event.target.value\n      });\n    }\n  };\n\n  const timeAddHandler = () => {\n    if (getTimersID.current !== false) {\n      alert(\"Can't proceed while timer is active.\");\n      return;\n    }\n\n    let x = prompt(\"Enter amount of time to load in the following format: h:mm:ss\");\n    let timeArr = x.split(\":\").reverse();\n\n    if (timeArr.length !== 3) {\n      alert(\"Invalid input! Too many or too few fields were input.\");\n      return;\n    }\n\n    if (!Number.isInteger(+timeArr[0]) || !Number.isInteger(+timeArr[1]) || !Number.isInteger(+timeArr[2])) {\n      alert(\"Invalid input! All fields must be integers.\");\n      return;\n    } //All checks passed, now we're diving in to the addition.\n\n\n    let desiredTimeInSeconds = +timeArr[0] + +timeArr[1] * 60 + +timeArr[2] * 3600 + getTime.current;\n    setTime(desiredTimeInSeconds);\n    chrome.storage.sync.set({\n      savedTime: desiredTimeInSeconds\n    });\n  };\n\n  const nameChangeHandler = () => {\n    var _prompt;\n\n    let newUserName = (_prompt = prompt(\"Please choose your nickname:\")) === null || _prompt === void 0 ? void 0 : _prompt.trim();\n    setUserName(newUserName.length === 0 ? getUserName : newUserName);\n    chrome.storage.sync.set({\n      userName: newUserName.length === 0 ? getUserName : newUserName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"popup-container\",\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: nameChangeHandler,\n        className: \"headline\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: getUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: timeAddHandler,\n        className: \"mode\",\n        children: \"Import Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats seperated datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"You have in total \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: Math.round(totalSeconds / 3600)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 31\n          }, this), \" recorded hours.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initialize-data seperated datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n            min: 0,\n            max: getCurrent,\n            className: \"data-input\",\n            placeholder: \"0\",\n            onChange: minHandler,\n            value: getStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n            min: getStart,\n            max: getEnd,\n            className: \"data-input\",\n            placeholder: \"0\",\n            onChange: currentHandler,\n            value: getCurrent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n            min: getCurrent,\n            className: \"data-input\",\n            placeholder: \"0\",\n            onChange: maxHandler,\n            value: getEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Jb5eJSgrg0W63v8GRcp11VdwYOs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/App.js"],"names":["NumberInput","useState","useEffect","useRef","useReducer","App","dataReducer","state","action","dataState","dataDispatch","start","current","end","time","getUserName","setUserName","totalSeconds","setTotalSeconds","chrome","storage","sync","get","data","setTime","startedRecordingAt","savedTime","Date","now","setCurrent","progress","setEnd","setStart","userName","changeHandler","getTime","set","resetHandler","minHandler","event","target","value","getCurrent","currentHandler","getStart","getEnd","maxHandler","timeAddHandler","getTimersID","alert","x","prompt","timeArr","split","reverse","length","Number","isInteger","desiredTimeInSeconds","nameChangeHandler","newUserName","trim","Math","round"],"mappings":"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","sourcesContent":["/*global chrome*/\r\nimport \"./App.css\";\r\nimport NumberInput from \"./components/NumberInput\";\r\nimport { useState, useEffect, useRef, useReducer } from \"react\";\r\n\r\nfunction App() {\r\n  // ETA Mode (Forward Looking),\r\n  // Sequential Mode (Time Elapsed)\r\n\r\n  dataReducer = (state, action) => {\r\n    return \"new state\";\r\n  };\r\n\r\n  let [dataState, dataDispatch] = useReducer(dataReducer, {\r\n    start: null,\r\n    current: null,\r\n    end: null,\r\n    time: null,\r\n  });\r\n\r\n  let [getUserName, setUserName] = useState(null);\r\n  let [totalSeconds, setTotalSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // initialize some variables from chrome storage\r\n    chrome.storage.sync.get(\r\n      [\r\n        \"startedRecordingAt\",\r\n        \"savedTime\",\r\n        \"start\",\r\n        \"progress\",\r\n        \"end\",\r\n        \"userName\",\r\n        \"totalSeconds\",\r\n      ],\r\n      (data) => {\r\n        setTime(\r\n          data.startedRecordingAt === null // check if a recording is in progress\r\n            ? data.savedTime === null\r\n              ? 0\r\n              : data.savedTime\r\n            : (Date.now() - data.startedRecordingAt) / 1000\r\n        );\r\n      }\r\n    );\r\n\r\n    chrome.storage.sync.get([], (data) => {\r\n      setCurrent(data.progress);\r\n      setEnd(data.end);\r\n      setStart(data.start);\r\n      setUserName(data.userName);\r\n      setTotalSeconds(data.totalSeconds);\r\n    });\r\n  }, []);\r\n\r\n  const changeHandler = () => {\r\n    setTime(getTime.current + 1);\r\n\r\n    //update progress values from storage\r\n    chrome.storage.sync.get([\"progress\", \"totalSeconds\"], (data) => {\r\n      setCurrent(data.progress);\r\n      setTotalSeconds(data.totalSeconds + 1);\r\n      chrome.storage.sync.set({ totalSeconds });\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setTime(0);\r\n    setStart(0);\r\n    setCurrent(0);\r\n    setEnd(0);\r\n    chrome.storage.sync.set({\r\n      start: 0,\r\n      progress: 0,\r\n      end: 0,\r\n    });\r\n    // if reset mode requested, reset timer!\r\n  };\r\n\r\n  const minHandler = (event) => {\r\n    if (+event.target.value <= getCurrent) {\r\n      setStart(+event.target.value);\r\n      chrome.storage.sync.set({ start: +event.target.value });\r\n    }\r\n  };\r\n  const currentHandler = (event) => {\r\n    if (+event.target.value >= getStart) {\r\n      if (+event.target.value <= getEnd) {\r\n        setCurrent(+event.target.value);\r\n        chrome.storage.sync.set({ progress: +event.target.value });\r\n      }\r\n    }\r\n  };\r\n  const maxHandler = (event) => {\r\n    if (+event.target.value >= getCurrent) {\r\n      setEnd(+event.target.value);\r\n      chrome.storage.sync.set({ end: +event.target.value });\r\n    }\r\n  };\r\n\r\n  const timeAddHandler = () => {\r\n    if (getTimersID.current !== false) {\r\n      alert(\"Can't proceed while timer is active.\");\r\n      return;\r\n    }\r\n\r\n    let x = prompt(\r\n      \"Enter amount of time to load in the following format: h:mm:ss\"\r\n    );\r\n\r\n    let timeArr = x.split(\":\").reverse();\r\n\r\n    if (timeArr.length !== 3) {\r\n      alert(\"Invalid input! Too many or too few fields were input.\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !Number.isInteger(+timeArr[0]) ||\r\n      !Number.isInteger(+timeArr[1]) ||\r\n      !Number.isInteger(+timeArr[2])\r\n    ) {\r\n      alert(\"Invalid input! All fields must be integers.\");\r\n      return;\r\n    }\r\n\r\n    //All checks passed, now we're diving in to the addition.\r\n    let desiredTimeInSeconds =\r\n      +timeArr[0] + +timeArr[1] * 60 + +timeArr[2] * 3600 + getTime.current;\r\n\r\n    setTime(desiredTimeInSeconds);\r\n\r\n    chrome.storage.sync.set({\r\n      savedTime: desiredTimeInSeconds,\r\n    });\r\n  };\r\n\r\n  const nameChangeHandler = () => {\r\n    let newUserName = prompt(\"Please choose your nickname:\")?.trim();\r\n    setUserName(newUserName.length === 0 ? getUserName : newUserName);\r\n    chrome.storage.sync.set({\r\n      userName: newUserName.length === 0 ? getUserName : newUserName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"popup-container\" className=\"Card\">\r\n      <div className=\"Card-header\">\r\n        <a onClick={nameChangeHandler} className=\"headline\">\r\n          <b>{getUserName}</b>\r\n        </a>\r\n        <a onClick={timeAddHandler} className=\"mode\">\r\n          Import Time\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"Card-layout\">\r\n        <div className=\"stats seperated datasection\">\r\n          <div>Stats</div>\r\n          <div>\r\n            You have in total <b>{Math.round(totalSeconds / 3600)}</b> recorded\r\n            hours.\r\n          </div>\r\n        </div>\r\n        <div className=\"initialize-data seperated datasection\">\r\n          <div className=\"data-row\">\r\n            <div>Start</div>\r\n            <NumberInput\r\n              min={0}\r\n              max={getCurrent}\r\n              className=\"data-input\"\r\n              placeholder=\"0\"\r\n              onChange={minHandler}\r\n              value={getStart}\r\n            />\r\n          </div>\r\n          <div className=\"data-row\">\r\n            <div>Progress</div>\r\n            <NumberInput\r\n              min={getStart}\r\n              max={getEnd}\r\n              className=\"data-input\"\r\n              placeholder=\"0\"\r\n              onChange={currentHandler}\r\n              value={getCurrent}\r\n            />\r\n          </div>\r\n          <div className=\"data-row\">\r\n            <div>Finish</div>\r\n            <NumberInput\r\n              min={getCurrent}\r\n              className=\"data-input\"\r\n              placeholder=\"0\"\r\n              onChange={maxHandler}\r\n              value={getEnd}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"actions datasection\">\r\n          <div>Actions</div>\r\n          <div className=\"buttons-container\">\r\n            <button>Reset</button>\r\n            <button>Record</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}