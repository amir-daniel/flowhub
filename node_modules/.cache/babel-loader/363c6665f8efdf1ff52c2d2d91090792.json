{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ItemData from \"./components/ItemData\";\nimport Timer from \"./components/Timer\";\nimport react from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [getTime, setTime] = useState(0);\n  let [getStart, setStart] = useState(chrome.storage.sync.get([\"start\"]));\n  let [getCurrent, setCurrent] = useState(chrome.storage.sync.get([\"progress\"]));\n  let [getEnd, setEnd] = useState(0);\n  const [getTimersID, setTimersID] = useState(false);\n\n  const changeHandler = function () {\n    let reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    setTime(prevState => reset ? 0 : prevState + 1);\n  };\n\n  const minHandler = event => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n    }\n  };\n\n  const currentHandler = event => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n      }\n    }\n  };\n\n  const maxHandler = event => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          value: getTime,\n          onTick: changeHandler,\n          timerID: getTimersID,\n          setTimerID: id => setTimersID(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ItemData, {\n          itemMin: getStart,\n          itemMax: getEnd,\n          progress: getCurrent,\n          onMinChange: minHandler,\n          onCurrentChange: currentHandler,\n          onMaxChange: maxHandler,\n          time: getTime,\n          timerID: getTimersID,\n          setTimerID: id => setTimersID(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7qX5cNUgV0kB5G6IvRg/q8FcesU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/App.js"],"names":["logo","ItemData","Timer","react","useState","App","getTime","setTime","getStart","setStart","chrome","storage","sync","get","getCurrent","setCurrent","getEnd","setEnd","getTimersID","setTimersID","changeHandler","reset","prevState","minHandler","event","target","value","currentHandler","maxHandler","id"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ItemData from \"./components/ItemData\";\nimport Timer from \"./components/Timer\";\nimport react from \"react\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let [getTime, setTime] = useState(0);\n  let [getStart, setStart] = useState(chrome.storage.sync.get([\"start\"]));\n  let [getCurrent, setCurrent] = useState(\n    chrome.storage.sync.get([\"progress\"])\n  );\n  let [getEnd, setEnd] = useState(0);\n  const [getTimersID, setTimersID] = useState(false);\n\n  const changeHandler = (reset = false) => {\n    setTime((prevState) => (reset ? 0 : prevState + 1));\n  };\n\n  const minHandler = (event) => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n    }\n  };\n  const currentHandler = (event) => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n      }\n    }\n  };\n  const maxHandler = (event) => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <Timer\n            value={getTime}\n            onTick={changeHandler}\n            timerID={getTimersID}\n            setTimerID={(id) => setTimersID(id)}\n          />\n          <ItemData\n            itemMin={getStart}\n            itemMax={getEnd}\n            progress={getCurrent}\n            onMinChange={minHandler}\n            onCurrentChange={currentHandler}\n            onMaxChange={maxHandler}\n            time={getTime}\n            timerID={getTimersID}\n            setTimerID={(id) => setTimersID(id)}\n          />\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}