{"ast":null,"code":"import react from\"react\";import styles from\"./ProgressBar.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProgressBar=function ProgressBar(){//   const update_progress = (pct) => {\n//     if (!isNaN(pct)) {\n//       if (pct > 100) {\n//         pct = 100;\n//       } // Too High\n//       if (pct < 0) {\n//         pct = 0;\n//       } // Too Low\n//       var offset = (-parseFloat(pct) / 100) * 220 - 220; // Getting offset for the SVG\n//       //   $(\".progress-bar\").attr(\"stroke-dashoffset\", offset);\n//       //   $(\".progress-label\").text(Number(Math.round(pct + \"e2\") + \"e-2\") + \"%\"); // Rounds to two decimal places\n//     }\n//     // Check for finish\n//     pct === 100 ? complete() : incomplete();\n//   };\n// Complete and Error States\n//   const complete = () => {\n//     $(\".container\").addClass(\"flipped complete\").removeClass(\"error\");\n//   };\n//   const incomplete = () => {\n//     $(\".container\").removeClass(\"flipped complete\");\n//   };\n//   const error = () => {\n//     $(\".container\").addClass(\"flipped error\").removeClass(\"complete\");\n//   };\n//   const no_error = () => {\n//     $(\".container\").removeClass(\"flipped error\");\n//   };\n// For testing\n//   function test() {\n//     $(\".progress-bar\").css(\"transition\", \"0.12s ease\");\n//     for (var i = 0; i <= 100; i++) {\n//       timer_thing(i);\n//     }\n//     setTimeout(function () {\n//       $(\".progress-bar\").css(\"transition\", \"0.4s cubic-bezier(0.5,0,0.2,1)\");\n//     }, 10100);\n//   }\n//   function timer_thing(i) {\n//     setTimeout(function () {\n//       update_progress(i);\n//     }, 100 * i);\n//   }\n//test();\nreturn/*#__PURE__*/_jsxs(\"div\",{class:\"abs-center container\",children:[/*#__PURE__*/_jsx(\"link\",{href:\"https://fonts.googleapis.com/css?family=Droid+Sans+Mono\",rel:\"stylesheet\"}),/*#__PURE__*/_jsx(\"link\",{rel:\"prefetch\",href:\"http://www.iconsdb.com/icons/preview/white/check-mark-xxl.png\"}),/*#__PURE__*/_jsx(\"link\",{rel:\"prefetch\",href:\"http://www.iconsdb.com/icons/preview/white/x-mark-xxl.png\"}),/*#__PURE__*/_jsx(\"div\",{class:\"abs-center front\",children:/*#__PURE__*/_jsxs(\"svg\",{viewbox:\"0 0 80 80\",class:\"abs-center rad-progress\",children:[/*#__PURE__*/_jsx(\"circle\",{class:\"progress-background\",cx:\"40\",cy:\"40\",r:\"35\"}),/*#__PURE__*/_jsx(\"circle\",{class:\"progress-bar\",cx:\"40\",cy:\"40\",r:\"35\",\"stroke-dasharray\":\"220\",\"stroke-dashoffset\":\"-220\"}),/*#__PURE__*/_jsx(\"div\",{class:\"abs-center progress-label\",children:\"0%\"})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"abs-center back\",children:/*#__PURE__*/_jsxs(\"svg\",{viewbox:\"0 0 80 80\",class:\"abs-center alt-state\",children:[/*#__PURE__*/_jsx(\"circle\",{class:\"icon-background\",cx:\"40\",cy:\"40\",r:\"35\",fill:\"#21cd92\",stroke:\"#21cd92\",\"stroke-width\":\"8\"}),/*#__PURE__*/_jsx(\"div\",{class:\"abs-center icon check\"}),/*#__PURE__*/_jsx(\"div\",{class:\"abs-center icon error\"})]})})]});};export default ProgressBar;","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/ProgressBar.js"],"names":["react","styles","ProgressBar"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,mBACE,aAAK,KAAK,CAAC,sBAAX,wBACE,aACE,IAAI,CAAC,yDADP,CAEE,GAAG,CAAC,YAFN,EADF,cAKE,aACE,GAAG,CAAC,UADN,CAEE,IAAI,CAAC,+DAFP,EALF,cASE,aACE,GAAG,CAAC,UADN,CAEE,IAAI,CAAC,2DAFP,EATF,cAaE,YAAK,KAAK,CAAC,kBAAX,uBACE,aAAK,OAAO,CAAC,WAAb,CAAyB,KAAK,CAAC,yBAA/B,wBACE,eAAQ,KAAK,CAAC,qBAAd,CAAoC,EAAE,CAAC,IAAvC,CAA4C,EAAE,CAAC,IAA/C,CAAoD,CAAC,CAAC,IAAtD,EADF,cAEE,eACE,KAAK,CAAC,cADR,CAEE,EAAE,CAAC,IAFL,CAGE,EAAE,CAAC,IAHL,CAIE,CAAC,CAAC,IAJJ,CAKE,mBAAiB,KALnB,CAME,oBAAkB,MANpB,EAFF,cAUE,YAAK,KAAK,CAAC,2BAAX,gBAVF,GADF,EAbF,cA2BE,YAAK,KAAK,CAAC,iBAAX,uBACE,aAAK,OAAO,CAAC,WAAb,CAAyB,KAAK,CAAC,sBAA/B,wBACE,eACE,KAAK,CAAC,iBADR,CAEE,EAAE,CAAC,IAFL,CAGE,EAAE,CAAC,IAHL,CAIE,CAAC,CAAC,IAJJ,CAKE,IAAI,CAAC,SALP,CAME,MAAM,CAAC,SANT,CAOE,eAAa,GAPf,EADF,cAUE,YAAK,KAAK,CAAC,uBAAX,EAVF,cAWE,YAAK,KAAK,CAAC,uBAAX,EAXF,GADF,EA3BF,GADF,CA6CD,CA/FD,CAiGA,cAAeA,CAAAA,WAAf","sourcesContent":["import react from \"react\";\r\nimport styles from \"./ProgressBar.module.css\";\r\nconst ProgressBar = () => {\r\n  //   const update_progress = (pct) => {\r\n  //     if (!isNaN(pct)) {\r\n  //       if (pct > 100) {\r\n  //         pct = 100;\r\n  //       } // Too High\r\n  //       if (pct < 0) {\r\n  //         pct = 0;\r\n  //       } // Too Low\r\n  //       var offset = (-parseFloat(pct) / 100) * 220 - 220; // Getting offset for the SVG\r\n\r\n  //       //   $(\".progress-bar\").attr(\"stroke-dashoffset\", offset);\r\n  //       //   $(\".progress-label\").text(Number(Math.round(pct + \"e2\") + \"e-2\") + \"%\"); // Rounds to two decimal places\r\n  //     }\r\n\r\n  //     // Check for finish\r\n  //     pct === 100 ? complete() : incomplete();\r\n  //   };\r\n\r\n  // Complete and Error States\r\n  //   const complete = () => {\r\n  //     $(\".container\").addClass(\"flipped complete\").removeClass(\"error\");\r\n  //   };\r\n  //   const incomplete = () => {\r\n  //     $(\".container\").removeClass(\"flipped complete\");\r\n  //   };\r\n  //   const error = () => {\r\n  //     $(\".container\").addClass(\"flipped error\").removeClass(\"complete\");\r\n  //   };\r\n  //   const no_error = () => {\r\n  //     $(\".container\").removeClass(\"flipped error\");\r\n  //   };\r\n\r\n  // For testing\r\n  //   function test() {\r\n  //     $(\".progress-bar\").css(\"transition\", \"0.12s ease\");\r\n  //     for (var i = 0; i <= 100; i++) {\r\n  //       timer_thing(i);\r\n  //     }\r\n  //     setTimeout(function () {\r\n  //       $(\".progress-bar\").css(\"transition\", \"0.4s cubic-bezier(0.5,0,0.2,1)\");\r\n  //     }, 10100);\r\n  //   }\r\n  //   function timer_thing(i) {\r\n  //     setTimeout(function () {\r\n  //       update_progress(i);\r\n  //     }, 100 * i);\r\n  //   }\r\n\r\n  //test();\r\n  return (\r\n    <div class=\"abs-center container\">\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css?family=Droid+Sans+Mono\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <link\r\n        rel=\"prefetch\"\r\n        href=\"http://www.iconsdb.com/icons/preview/white/check-mark-xxl.png\"\r\n      />\r\n      <link\r\n        rel=\"prefetch\"\r\n        href=\"http://www.iconsdb.com/icons/preview/white/x-mark-xxl.png\"\r\n      />\r\n      <div class=\"abs-center front\">\r\n        <svg viewbox=\"0 0 80 80\" class=\"abs-center rad-progress\">\r\n          <circle class=\"progress-background\" cx=\"40\" cy=\"40\" r=\"35\" />\r\n          <circle\r\n            class=\"progress-bar\"\r\n            cx=\"40\"\r\n            cy=\"40\"\r\n            r=\"35\"\r\n            stroke-dasharray=\"220\"\r\n            stroke-dashoffset=\"-220\"\r\n          />\r\n          <div class=\"abs-center progress-label\">0%</div>\r\n        </svg>\r\n      </div>\r\n      <div class=\"abs-center back\">\r\n        <svg viewbox=\"0 0 80 80\" class=\"abs-center alt-state\">\r\n          <circle\r\n            class=\"icon-background\"\r\n            cx=\"40\"\r\n            cy=\"40\"\r\n            r=\"35\"\r\n            fill=\"#21cd92\"\r\n            stroke=\"#21cd92\"\r\n            stroke-width=\"8\"\r\n          />\r\n          <div class=\"abs-center icon check\"></div>\r\n          <div class=\"abs-center icon error\"></div>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}