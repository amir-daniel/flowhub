{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useState}from\"react\";import styles from\"./ItemData.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ItemData=function ItemData(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),getIsAnimating=_useState2[0],setIsAnimating=_useState2[1];var getETA=function getETA(){var totalProgress=props.progress-props.itemMin;var progressLeft=props.itemMax-props.progress;var totalMins=props.time/60;if(props.time<1||totalProgress===0){return\"∞\";}if(progressLeft===0){return\"✅\";}var designDigit=function designDigit(num){return num<10?\"0\"+num:num;};var paceInMins=totalProgress/totalMins;var minsPerItem=1/paceInMins;var minsLeft=minsPerItem*progressLeft;// let hoursLeft = minsLeft / 60;\nvar millisecondsLeft=minsLeft*60*1000;var ETADate=new Date(Date.now()+millisecondsLeft);var dateFormatted=designDigit(ETADate.getHours())+\":\"+designDigit(ETADate.getMinutes());return dateFormatted;};var getPercentage=function getPercentage(){var totalProgressMade=props.progress-props.itemMin;var totalProgressPossible=props.itemMax-props.itemMin;if(totalProgressPossible===0){return 0;}return 100*(totalProgressMade/totalProgressPossible);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(event){return event.preventDefault();},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"1\",onChange:props.onMinChange,value:props.itemMin}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",onChange:function onChange(event){props.onCurrentChange(event);setIsAnimating(1);},min:\"0\",step:\"1\",value:props.progress}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",onChange:props.onMaxChange,value:props.itemMax,min:\"0\",step:\"1\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{class:styles.progress,children:/*#__PURE__*/_jsx(\"div\",{onAnimationEnd:function onAnimationEnd(){setIsAnimating(0);},class:styles[\"progress-value\"],style:{width:getPercentage()+\"%\",background:getPercentage()<100?getPercentage()<50?\"rgb(197, 52, 52)\":\"rgb(243, 247, 46)\":\"rgb(32, 189, 17)\"},animatenow:getIsAnimating})}),/*#__PURE__*/_jsx(\"br\",{}),\"Total: \",getETA(),\" (\",props.time,\")\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){props.onCurrentChange({target:{value:props.progress+1}});},type:\"submit\",autofocus:\"true\",children:\"Raise\"})]})});};export default ItemData;","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/ItemData.js"],"names":["useState","styles","ItemData","props","getIsAnimating","setIsAnimating","getETA","totalProgress","progress","itemMin","progressLeft","itemMax","totalMins","time","designDigit","num","paceInMins","minsPerItem","minsLeft","millisecondsLeft","ETADate","Date","now","dateFormatted","getHours","getMinutes","getPercentage","totalProgressMade","totalProgressPossible","event","preventDefault","onMinChange","onCurrentChange","onMaxChange","width","background","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./ItemData.module.css\";\r\n\r\nconst ItemData = (props) => {\r\n  const [getIsAnimating, setIsAnimating] = useState(0);\r\n  const getETA = () => {\r\n    let totalProgress = props.progress - props.itemMin;\r\n    let progressLeft = props.itemMax - props.progress;\r\n    let totalMins = props.time / 60;\r\n\r\n    if (props.time < 1 || totalProgress === 0) {\r\n      return \"∞\";\r\n    }\r\n\r\n    if (progressLeft === 0) {\r\n      return \"✅\";\r\n    }\r\n\r\n    const designDigit = (num) => (num < 10 ? \"0\" + num : num);\r\n\r\n    let paceInMins = totalProgress / totalMins;\r\n    let minsPerItem = 1 / paceInMins;\r\n    let minsLeft = minsPerItem * progressLeft;\r\n    // let hoursLeft = minsLeft / 60;\r\n    let millisecondsLeft = minsLeft * 60 * 1000;\r\n    let ETADate = new Date(Date.now() + millisecondsLeft);\r\n    let dateFormatted =\r\n      designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\r\n\r\n    return dateFormatted;\r\n  };\r\n\r\n  const getPercentage = () => {\r\n    let totalProgressMade = props.progress - props.itemMin;\r\n    let totalProgressPossible = props.itemMax - props.itemMin;\r\n\r\n    if (totalProgressPossible === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return 100 * (totalProgressMade / totalProgressPossible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(event) => event.preventDefault()}>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"1\"\r\n          onChange={props.onMinChange}\r\n          value={props.itemMin}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          onChange={(event) => {\r\n            props.onCurrentChange(event);\r\n            setIsAnimating(1);\r\n          }}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          value={props.progress}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          onChange={props.onMaxChange}\r\n          value={props.itemMax}\r\n          min=\"0\"\r\n          step=\"1\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <div class={styles.progress}>\r\n          <div\r\n            onAnimationEnd={() => {\r\n              setIsAnimating(0);\r\n            }}\r\n            class={styles[`progress-value`]}\r\n            style={{\r\n              width: getPercentage() + \"%\",\r\n              background:\r\n                getPercentage() < 100\r\n                  ? getPercentage() < 50\r\n                    ? \"rgb(197, 52, 52)\"\r\n                    : \"rgb(243, 247, 46)\"\r\n                  : \"rgb(32, 189, 17)\",\r\n            }}\r\n            animatenow={getIsAnimating}\r\n          ></div>\r\n        </div>\r\n        <br />\r\n        Total: {getETA()} ({props.time})<br />\r\n        <button\r\n          onClick={() => {\r\n            props.onCurrentChange({ target: { value: props.progress + 1 } });\r\n          }}\r\n          type=\"submit\"\r\n          autofocus=\"true\"\r\n        >\r\n          Raise\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemData;\r\n"]},"metadata":{},"sourceType":"module"}