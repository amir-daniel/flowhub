{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\components\\\\Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*global chrome*/\nconst Timer = props => {\n  const tickHandler = () => {\n    props.onTick();\n    props.modifyTimerID(setTimeout(() => {\n      tickHandler();\n    }, 1000));\n  };\n\n  const startHandler = () => {\n    if (props.timerID.current === false) {\n      props.modifyTimerID(setTimeout(() => {\n        tickHandler();\n      }, 1000));\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], data => {\n        if (data.startedRecordingAt === null && data.savedTime === null) {\n          chrome.storage.sync.set({\n            startedRecordingAt: Date.now()\n          });\n        } else {\n          chrome.storage.sync.set({\n            startedRecordingAt: Date.now() - props.value * 1000,\n            savedTime: null\n          });\n        }\n      });\n    }\n  };\n\n  const stopHandler = () => {\n    clearTimeout(props.timerID.current);\n    props.modifyTimerID(false);\n    chrome.storage.sync.set({\n      startedRecordingAt: null\n    });\n    chrome.storage.sync.set({\n      savedTime: props.value\n    });\n  };\n\n  const resetHandler = () => {\n    stopHandler(); // pause time recording\n\n    props.onTick(true); // remove time recorded -> reset === true\n\n    chrome.storage.sync.set({\n      startedRecordingAt: null,\n      savedTime: null\n    });\n  };\n\n  if (props.value > 0) {\n    if (props.timerID.current !== false) {\n      startHandler();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.value < 1,\n      onClick: resetHandler,\n      children: \"\\u23F9\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !props.timerID.current,\n      onClick: stopHandler,\n      children: \"\\u23F8\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.timerID.current,\n      onClick: startHandler,\n      children: \"\\u25B6\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: [props.timerID.current === false ? \"false\" : props.timerID.current, \",\", \" \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/Timer.js"],"names":["Timer","props","tickHandler","onTick","modifyTimerID","setTimeout","startHandler","timerID","current","chrome","storage","sync","get","data","startedRecordingAt","savedTime","set","Date","now","value","stopHandler","clearTimeout","resetHandler","color"],"mappings":"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","sourcesContent":["/*global chrome*/\r\n\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    props.onTick();\r\n    props.modifyTimerID(\r\n      setTimeout(() => {\r\n        tickHandler();\r\n      }, 1000)\r\n    );\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (props.timerID.current === false) {\r\n      props.modifyTimerID(\r\n        setTimeout(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n\r\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n        if (data.startedRecordingAt === null && data.savedTime === null) {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now(),\r\n          });\r\n        } else {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now() - props.value * 1000,\r\n            savedTime: null,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    clearTimeout(props.timerID.current);\r\n    props.modifyTimerID(false);\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n    });\r\n\r\n    chrome.storage.sync.set({\r\n      savedTime: props.value,\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    stopHandler(); // pause time recording\r\n    props.onTick(true); // remove time recorded -> reset === true\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: null,\r\n    });\r\n  };\r\n\r\n  if (props.value > 0) {\r\n    if (props.timerID.current !== false) {\r\n      startHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button disabled={props.value < 1} onClick={resetHandler}>\r\n        ⏹️\r\n      </button>\r\n      <button disabled={!props.timerID.current} onClick={stopHandler}>\r\n        ⏸️\r\n      </button>\r\n      <button disabled={props.timerID.current} onClick={startHandler}>\r\n        ▶️\r\n      </button>\r\n      <br />\r\n      <div style={{ color: \"white\" }}>\r\n        {props.timerID.current === false ? \"false\" : props.timerID.current},{\" \"}\r\n        {props.value}\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}