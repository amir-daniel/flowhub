{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/*global chrome*/\nimport \"./App.css\";\nimport ItemData from \"./components/ItemData\";\nimport Timer from \"./components/Timer\";\nimport react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [getTime, setTime] = useState(0);\n  let [getStart, setStart] = useState(0);\n  let [getCurrent, setCurrent] = useState(0);\n  let [getEnd, setEnd] = useState(0);\n  const [getTimersID, setTimersID] = useState(false);\n  useEffect(() => {\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], data => {\n      alert(data.savedTime);\n      setTime(data.startedRecordingAt === null ? data.savedTime === null ? 0 : data.savedTime : (Date.now() - data.startedRecordingAt) / 1000);\n    });\n    chrome.storage.sync.get([\"start\"], data => {\n      setStart(data.start);\n    });\n    chrome.storage.sync.get([\"progress\"], data => {\n      setCurrent(data.progress);\n    });\n    chrome.storage.sync.get([\"end\"], data => {\n      setEnd(data.end);\n    }); // chrome.storage.sync.get([\"isTimerOn\"], (data) => {\n    //   setTimersID(data.isTimerOn);\n    // });\n  }, []);\n\n  const changeHandler = function () {\n    let reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    setTime(prevState => reset ? 0 : prevState + 1);\n  };\n\n  const minHandler = event => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n      chrome.storage.sync.set({\n        start: +event.target.value\n      });\n    }\n  };\n\n  const currentHandler = event => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n        chrome.storage.sync.set({\n          progress: +event.target.value\n        });\n      }\n    }\n  };\n\n  const maxHandler = event => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n      chrome.storage.sync.set({\n        end: +event.target.value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          value: getTime,\n          onTick: changeHandler,\n          timerID: getTimersID,\n          modifyTimerID: id => {\n            setTimersID(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ItemData, {\n          itemMin: getStart,\n          itemMax: getEnd,\n          progress: getCurrent,\n          onMinChange: minHandler,\n          onCurrentChange: currentHandler,\n          onMaxChange: maxHandler,\n          time: getTime,\n          timerID: getTimersID,\n          setTimerID: id => {\n            setTimersID(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9eMPc2AsfZSWIkyAT/O+8PGTSjs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/App.js"],"names":["ItemData","Timer","react","useState","useEffect","App","getTime","setTime","getStart","setStart","getCurrent","setCurrent","getEnd","setEnd","getTimersID","setTimersID","chrome","storage","sync","get","data","alert","savedTime","startedRecordingAt","Date","now","start","progress","end","changeHandler","reset","prevState","minHandler","event","target","value","set","currentHandler","maxHandler","id"],"mappings":"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","sourcesContent":["/*global chrome*/\nimport \"./App.css\";\nimport ItemData from \"./components/ItemData\";\nimport Timer from \"./components/Timer\";\nimport react from \"react\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  let [getTime, setTime] = useState(0);\n  let [getStart, setStart] = useState(0);\n  let [getCurrent, setCurrent] = useState(0);\n  let [getEnd, setEnd] = useState(0);\n  const [getTimersID, setTimersID] = useState(false);\n\n  useEffect(() => {\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\n      alert(data.savedTime);\n      setTime(\n        data.startedRecordingAt === null\n          ? data.savedTime === null\n            ? 0\n            : data.savedTime\n          : (Date.now() - data.startedRecordingAt) / 1000\n      );\n    });\n\n    chrome.storage.sync.get([\"start\"], (data) => {\n      setStart(data.start);\n    });\n\n    chrome.storage.sync.get([\"progress\"], (data) => {\n      setCurrent(data.progress);\n    });\n\n    chrome.storage.sync.get([\"end\"], (data) => {\n      setEnd(data.end);\n    });\n\n    // chrome.storage.sync.get([\"isTimerOn\"], (data) => {\n    //   setTimersID(data.isTimerOn);\n    // });\n  }, []);\n\n  const changeHandler = (reset = false) => {\n    setTime((prevState) => (reset ? 0 : prevState + 1));\n  };\n\n  const minHandler = (event) => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n      chrome.storage.sync.set({ start: +event.target.value });\n    }\n  };\n  const currentHandler = (event) => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n        chrome.storage.sync.set({ progress: +event.target.value });\n      }\n    }\n  };\n  const maxHandler = (event) => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n      chrome.storage.sync.set({ end: +event.target.value });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <Timer\n            value={getTime}\n            onTick={changeHandler}\n            timerID={getTimersID}\n            modifyTimerID={(id) => {\n              setTimersID(id);\n            }}\n          />\n          <ItemData\n            itemMin={getStart}\n            itemMax={getEnd}\n            progress={getCurrent}\n            onMinChange={minHandler}\n            onCurrentChange={currentHandler}\n            onMaxChange={maxHandler}\n            time={getTime}\n            timerID={getTimersID}\n            setTimerID={(id) => {\n              setTimersID(id);\n            }}\n          />\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}