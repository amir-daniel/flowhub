{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{clear}from\"@testing-library/user-event/dist/clear\";import{useState,useEffect,useRef}from\"react\";import\"./BufferElement.css\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BufferElement=function BufferElement(props){var _useState=useState(props.isActive),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var isFirstRender=useRef(true);useEffect(function(){var cleaningTimer;alert(props.isInitializing);if(props.isInitializing===false&&isFirstRender.current===true){// don't show loading screen on first initialization\nisFirstRender.current=false;return/*#__PURE__*/_jsx(_Fragment,{});}else if(props.isInitializing===true){return/*#__PURE__*/_jsx(_Fragment,{});}if(props.isActive===false){setMessage(/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"svg\",{class:\"checkmark\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 52 52\",children:[/*#__PURE__*/_jsx(\"circle\",{class:\"checkmark__circle\",cx:\"26\",cy:\"26\",r:\"25\",fill:\"none\"}),/*#__PURE__*/_jsx(\"path\",{class:\"checkmark__check\",fill:\"none\",d:\"M14.1 27.2l7.1 7.2 16.7-16.8\"})]})}));cleaningTimer=setTimeout(function(){setMessage(false);},2000);}else{setMessage(/*#__PURE__*/_jsxs(\"div\",{className:\"lds-roller\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]}));}return function(){clearTimeout(cleaningTimer);};},[props.isActive,props.isInitializing]);return message;};export default BufferElement;","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/BufferElement.js"],"names":["clear","useState","useEffect","useRef","BufferElement","props","isActive","message","setMessage","isFirstRender","cleaningTimer","alert","isInitializing","current","setTimeout","clearTimeout"],"mappings":"wIAAA,OAASA,KAAT,KAAsB,wCAAtB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,KAA4C,OAA5C,CACA,MAAO,qBAAP,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,cAA4BJ,QAAQ,CAACI,KAAK,CAACC,QAAP,CAApC,wCAAKC,OAAL,eAAcC,UAAd,eACA,GAAIC,CAAAA,aAAa,CAAGN,MAAM,CAAC,IAAD,CAA1B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIQ,CAAAA,aAAJ,CACAC,KAAK,CAACN,KAAK,CAACO,cAAP,CAAL,CACA,GAAIP,KAAK,CAACO,cAAN,GAAyB,KAAzB,EAAkCH,aAAa,CAACI,OAAd,GAA0B,IAAhE,CAAsE,CACpE;AACAJ,aAAa,CAACI,OAAd,CAAwB,KAAxB,CACA,mBAAO,kBAAP,CACD,CAJD,IAIO,IAAIR,KAAK,CAACO,cAAN,GAAyB,IAA7B,CAAmC,CACxC,mBAAO,kBAAP,CACD,CACD,GAAIP,KAAK,CAACC,QAAN,GAAmB,KAAvB,CAA8B,CAC5BE,UAAU,cACR,kCACE,aACE,KAAK,CAAC,WADR,CAEE,KAAK,CAAC,4BAFR,CAGE,OAAO,CAAC,WAHV,wBAKE,eACE,KAAK,CAAC,mBADR,CAEE,EAAE,CAAC,IAFL,CAGE,EAAE,CAAC,IAHL,CAIE,CAAC,CAAC,IAJJ,CAKE,IAAI,CAAC,MALP,EALF,cAYE,aACE,KAAK,CAAC,kBADR,CAEE,IAAI,CAAC,MAFP,CAGE,CAAC,CAAC,8BAHJ,EAZF,GADF,EADQ,CAAV,CAsBAE,aAAa,CAAGI,UAAU,CAAC,UAAM,CAC/BN,UAAU,CAAC,KAAD,CAAV,CACD,CAFyB,CAEvB,IAFuB,CAA1B,CAGD,CA1BD,IA0BO,CACLA,UAAU,cACR,aAAK,SAAS,CAAC,YAAf,wBACE,cADF,cAEE,cAFF,cAGE,cAHF,cAIE,cAJF,cAKE,cALF,cAME,cANF,cAOE,cAPF,cAQE,cARF,GADQ,CAAV,CAYD,CACD,MAAO,WAAM,CACXO,YAAY,CAACL,aAAD,CAAZ,CACD,CAFD,CAGD,CArDQ,CAqDN,CAACL,KAAK,CAACC,QAAP,CAAiBD,KAAK,CAACO,cAAvB,CArDM,CAAT,CAsDA,MAAOL,CAAAA,OAAP,CACD,CA3DD,CA6DA,cAAeH,CAAAA,aAAf","sourcesContent":["import { clear } from \"@testing-library/user-event/dist/clear\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./BufferElement.css\";\r\n\r\nconst BufferElement = (props) => {\r\n  let [message, setMessage] = useState(props.isActive);\r\n  let isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    let cleaningTimer;\r\n    alert(props.isInitializing);\r\n    if (props.isInitializing === false && isFirstRender.current === true) {\r\n      // don't show loading screen on first initialization\r\n      isFirstRender.current = false;\r\n      return <></>;\r\n    } else if (props.isInitializing === true) {\r\n      return <></>;\r\n    }\r\n    if (props.isActive === false) {\r\n      setMessage(\r\n        <div>\r\n          <svg\r\n            class=\"checkmark\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 52 52\"\r\n          >\r\n            <circle\r\n              class=\"checkmark__circle\"\r\n              cx=\"26\"\r\n              cy=\"26\"\r\n              r=\"25\"\r\n              fill=\"none\"\r\n            />\r\n            <path\r\n              class=\"checkmark__check\"\r\n              fill=\"none\"\r\n              d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      );\r\n      cleaningTimer = setTimeout(() => {\r\n        setMessage(false);\r\n      }, 2000);\r\n    } else {\r\n      setMessage(\r\n        <div className=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      );\r\n    }\r\n    return () => {\r\n      clearTimeout(cleaningTimer);\r\n    };\r\n  }, [props.isActive, props.isInitializing]);\r\n  return message;\r\n};\r\n\r\nexport default BufferElement;\r\n"]},"metadata":{},"sourceType":"module"}