{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/*global chrome*/\nimport \"./App.css\";\nimport ItemData from \"./components/ItemData\";\nimport Timer from \"./components/Timer\";\nimport react from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ETA Mode (Forward Looking),\n  // Sequential Mode (Time Elapsed)\n  let [time, setTime] = useState(null);\n  let [getStart, setStart] = useState(null);\n  let [getCurrent, setCurrent] = useState(null);\n  let [getEnd, setEnd] = useState(null);\n  let [getUserName, setUserName] = useState(null);\n  let [totalSeconds, setTotalSeconds] = useState(0);\n  let [TimersID, setTimersID] = useState(false);\n  let getTime = useRef();\n  let getTimersID = useRef();\n  getTimersID.current = TimersID;\n  getTime.current = time;\n  useEffect(() => {\n    // initialize some variables from chrome storage\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], data => {\n      setTime(data.startedRecordingAt === null // check if a recording is in progress\n      ? data.savedTime === null ? 0 : data.savedTime : (Date.now() - data.startedRecordingAt) / 1000);\n    });\n    chrome.storage.sync.get([\"start\", \"progress\", \"end\", \"userName\", \"totalSeconds\"], data => {\n      setCurrent(data.progress);\n      setEnd(data.end);\n      setStart(data.start);\n      setUserName(data.userName);\n      setTotalSeconds(data.totalSeconds);\n    });\n  }, []);\n\n  const changeHandler = () => {\n    setTime(getTime.current + 1); //update progress values from storage\n\n    chrome.storage.sync.get([\"progress\"], data => {\n      setCurrent(data.progress);\n    });\n  };\n\n  const resetHandler = () => {\n    setTime(0);\n    setStart(0);\n    setCurrent(0);\n    setEnd(0);\n    chrome.storage.sync.set({\n      start: 0,\n      progress: 0,\n      end: 0\n    }); // if reset mode requested, reset timer!\n  };\n\n  const minHandler = event => {\n    if (+event.target.value <= getCurrent) {\n      setStart(+event.target.value);\n      chrome.storage.sync.set({\n        start: +event.target.value\n      });\n    }\n  };\n\n  const currentHandler = event => {\n    if (+event.target.value >= getStart) {\n      if (+event.target.value <= getEnd) {\n        setCurrent(+event.target.value);\n        chrome.storage.sync.set({\n          progress: +event.target.value\n        });\n      }\n    }\n  };\n\n  const maxHandler = event => {\n    if (+event.target.value >= getCurrent) {\n      setEnd(+event.target.value);\n      chrome.storage.sync.set({\n        end: +event.target.value\n      });\n    }\n  };\n\n  const timeAddHandler = () => {\n    if (getTimersID.current !== false) {\n      alert(\"Can't proceed while timer is active.\");\n      return;\n    }\n\n    let x = prompt(\"Enter amount of time to load in the following format: h:mm:ss\");\n    let timeArr = x.split(\":\").reverse();\n\n    if (timeArr.length !== 3) {\n      alert(\"Invalid input! Too many or too few fields were input.\");\n      return;\n    }\n\n    if (!Number.isInteger(+timeArr[0]) || !Number.isInteger(+timeArr[1]) || !Number.isInteger(+timeArr[2])) {\n      alert(\"Invalid input! All fields must be integers.\");\n      return;\n    } //All checks passed, now we're diving in to the addition.\n\n\n    let desiredTimeInSeconds = +timeArr[0] + +timeArr[1] * 60 + +timeArr[2] * 3600 + getTime.current;\n    setTime(desiredTimeInSeconds);\n    chrome.storage.sync.set({\n      savedTime: desiredTimeInSeconds\n    });\n  };\n\n  const nameChangeHandler = () => {\n    return \"x\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"popup-container\",\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"headline\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Dbkillerex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"mode\",\n        children: \"ETA Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats seperated datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"You have in total \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"808\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 31\n          }, this), \" recorded hours.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initialize-data seperated datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"data-input\",\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"data-input\",\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"data-input\",\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions datasection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UHHWGuOBDIhTIaCaT80EmRO1Bhw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/App.js"],"names":["ItemData","Timer","react","useState","useEffect","useRef","App","time","setTime","getStart","setStart","getCurrent","setCurrent","getEnd","setEnd","getUserName","setUserName","totalSeconds","setTotalSeconds","TimersID","setTimersID","getTime","getTimersID","current","chrome","storage","sync","get","data","startedRecordingAt","savedTime","Date","now","progress","end","start","userName","changeHandler","resetHandler","set","minHandler","event","target","value","currentHandler","maxHandler","timeAddHandler","alert","x","prompt","timeArr","split","reverse","length","Number","isInteger","desiredTimeInSeconds","nameChangeHandler"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AAEA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAI,CAACM,QAAD,EAAWC,QAAX,IAAuBP,QAAQ,CAAC,IAAD,CAAnC;AACA,MAAI,CAACQ,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,IAAD,CAAvC;AACA,MAAI,CAACU,MAAD,EAASC,MAAT,IAAmBX,QAAQ,CAAC,IAAD,CAA/B;AACA,MAAI,CAACY,WAAD,EAAcC,WAAd,IAA6Bb,QAAQ,CAAC,IAAD,CAAzC;AACA,MAAI,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,CAAD,CAA9C;AACA,MAAI,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIkB,OAAO,GAAGhB,MAAM,EAApB;AACA,MAAIiB,WAAW,GAAGjB,MAAM,EAAxB;AAEAiB,EAAAA,WAAW,CAACC,OAAZ,GAAsBJ,QAAtB;AACAE,EAAAA,OAAO,CAACE,OAAR,GAAkBhB,IAAlB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAoB,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,CAAC,oBAAD,EAAuB,WAAvB,CAAxB,EAA8DC,IAAD,IAAU;AACrEpB,MAAAA,OAAO,CACLoB,IAAI,CAACC,kBAAL,KAA4B,IAA5B,CAAiC;AAAjC,QACID,IAAI,CAACE,SAAL,KAAmB,IAAnB,GACE,CADF,GAEEF,IAAI,CAACE,SAHX,GAII,CAACC,IAAI,CAACC,GAAL,KAAaJ,IAAI,CAACC,kBAAnB,IAAyC,IALxC,CAAP;AAOD,KARD;AAUAL,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CACE,CAAC,OAAD,EAAU,UAAV,EAAsB,KAAtB,EAA6B,UAA7B,EAAyC,cAAzC,CADF,EAEGC,IAAD,IAAU;AACRhB,MAAAA,UAAU,CAACgB,IAAI,CAACK,QAAN,CAAV;AACAnB,MAAAA,MAAM,CAACc,IAAI,CAACM,GAAN,CAAN;AACAxB,MAAAA,QAAQ,CAACkB,IAAI,CAACO,KAAN,CAAR;AACAnB,MAAAA,WAAW,CAACY,IAAI,CAACQ,QAAN,CAAX;AACAlB,MAAAA,eAAe,CAACU,IAAI,CAACX,YAAN,CAAf;AACD,KARH;AAUD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,QAAMoB,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,OAAO,CAACa,OAAO,CAACE,OAAR,GAAkB,CAAnB,CAAP,CAD0B,CAE1B;;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,CAAC,UAAD,CAAxB,EAAuCC,IAAD,IAAU;AAC9ChB,MAAAA,UAAU,CAACgB,IAAI,CAACK,QAAN,CAAV;AACD,KAFD;AAGD,GAND;;AAQA,QAAMK,YAAY,GAAG,MAAM;AACzB9B,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,MAAM,CAAC,CAAD,CAAN;AACAU,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBa,GAApB,CAAwB;AACtBJ,MAAAA,KAAK,EAAE,CADe;AAEtBF,MAAAA,QAAQ,EAAE,CAFY;AAGtBC,MAAAA,GAAG,EAAE;AAHiB,KAAxB,EALyB,CAUzB;AACD,GAXD;;AAaA,QAAMM,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAd,IAAuBhC,UAA3B,EAAuC;AACrCD,MAAAA,QAAQ,CAAC,CAAC+B,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAR;AACAnB,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBa,GAApB,CAAwB;AAAEJ,QAAAA,KAAK,EAAE,CAACM,KAAK,CAACC,MAAN,CAAaC;AAAvB,OAAxB;AACD;AACF,GALD;;AAMA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChC,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAd,IAAuBlC,QAA3B,EAAqC;AACnC,UAAI,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,IAAuB9B,MAA3B,EAAmC;AACjCD,QAAAA,UAAU,CAAC,CAAC6B,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAV;AACAnB,QAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBa,GAApB,CAAwB;AAAEN,UAAAA,QAAQ,EAAE,CAACQ,KAAK,CAACC,MAAN,CAAaC;AAA1B,SAAxB;AACD;AACF;AACF,GAPD;;AAQA,QAAME,UAAU,GAAIJ,KAAD,IAAW;AAC5B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAd,IAAuBhC,UAA3B,EAAuC;AACrCG,MAAAA,MAAM,CAAC,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAN;AACAnB,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBa,GAApB,CAAwB;AAAEL,QAAAA,GAAG,EAAE,CAACO,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAxB;AACD;AACF,GALD;;AAOA,QAAMG,cAAc,GAAG,MAAM;AAC3B,QAAIxB,WAAW,CAACC,OAAZ,KAAwB,KAA5B,EAAmC;AACjCwB,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;AACD;;AAED,QAAIC,CAAC,GAAGC,MAAM,CACZ,+DADY,CAAd;AAIA,QAAIC,OAAO,GAAGF,CAAC,CAACG,KAAF,CAAQ,GAAR,EAAaC,OAAb,EAAd;;AAEA,QAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;AACxBN,MAAAA,KAAK,CAAC,uDAAD,CAAL;AACA;AACD;;AAED,QACE,CAACO,MAAM,CAACC,SAAP,CAAiB,CAACL,OAAO,CAAC,CAAD,CAAzB,CAAD,IACA,CAACI,MAAM,CAACC,SAAP,CAAiB,CAACL,OAAO,CAAC,CAAD,CAAzB,CADD,IAEA,CAACI,MAAM,CAACC,SAAP,CAAiB,CAACL,OAAO,CAAC,CAAD,CAAzB,CAHH,EAIE;AACAH,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACA;AACD,KAxB0B,CA0B3B;;;AACA,QAAIS,oBAAoB,GACtB,CAACN,OAAO,CAAC,CAAD,CAAR,GAAc,CAACA,OAAO,CAAC,CAAD,CAAR,GAAc,EAA5B,GAAiC,CAACA,OAAO,CAAC,CAAD,CAAR,GAAc,IAA/C,GAAsD7B,OAAO,CAACE,OADhE;AAGAf,IAAAA,OAAO,CAACgD,oBAAD,CAAP;AAEAhC,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBa,GAApB,CAAwB;AACtBT,MAAAA,SAAS,EAAE0B;AADW,KAAxB;AAGD,GAnCD;;AAqCA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,WAAO,GAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,wDACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,YAA7B;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,YAA7B;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,YAA7B;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAqBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GApKQnD,G;;KAAAA,G;AAsKT,eAAeA,GAAf","sourcesContent":["/*global chrome*/\r\nimport \"./App.css\";\r\nimport ItemData from \"./components/ItemData\";\r\nimport Timer from \"./components/Timer\";\r\nimport react from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction App() {\r\n  // ETA Mode (Forward Looking),\r\n  // Sequential Mode (Time Elapsed)\r\n\r\n  let [time, setTime] = useState(null);\r\n  let [getStart, setStart] = useState(null);\r\n  let [getCurrent, setCurrent] = useState(null);\r\n  let [getEnd, setEnd] = useState(null);\r\n  let [getUserName, setUserName] = useState(null);\r\n  let [totalSeconds, setTotalSeconds] = useState(0);\r\n  let [TimersID, setTimersID] = useState(false);\r\n  let getTime = useRef();\r\n  let getTimersID = useRef();\r\n\r\n  getTimersID.current = TimersID;\r\n  getTime.current = time;\r\n\r\n  useEffect(() => {\r\n    // initialize some variables from chrome storage\r\n    chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n      setTime(\r\n        data.startedRecordingAt === null // check if a recording is in progress\r\n          ? data.savedTime === null\r\n            ? 0\r\n            : data.savedTime\r\n          : (Date.now() - data.startedRecordingAt) / 1000\r\n      );\r\n    });\r\n\r\n    chrome.storage.sync.get(\r\n      [\"start\", \"progress\", \"end\", \"userName\", \"totalSeconds\"],\r\n      (data) => {\r\n        setCurrent(data.progress);\r\n        setEnd(data.end);\r\n        setStart(data.start);\r\n        setUserName(data.userName);\r\n        setTotalSeconds(data.totalSeconds);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const changeHandler = () => {\r\n    setTime(getTime.current + 1);\r\n    //update progress values from storage\r\n    chrome.storage.sync.get([\"progress\"], (data) => {\r\n      setCurrent(data.progress);\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setTime(0);\r\n    setStart(0);\r\n    setCurrent(0);\r\n    setEnd(0);\r\n    chrome.storage.sync.set({\r\n      start: 0,\r\n      progress: 0,\r\n      end: 0,\r\n    });\r\n    // if reset mode requested, reset timer!\r\n  };\r\n\r\n  const minHandler = (event) => {\r\n    if (+event.target.value <= getCurrent) {\r\n      setStart(+event.target.value);\r\n      chrome.storage.sync.set({ start: +event.target.value });\r\n    }\r\n  };\r\n  const currentHandler = (event) => {\r\n    if (+event.target.value >= getStart) {\r\n      if (+event.target.value <= getEnd) {\r\n        setCurrent(+event.target.value);\r\n        chrome.storage.sync.set({ progress: +event.target.value });\r\n      }\r\n    }\r\n  };\r\n  const maxHandler = (event) => {\r\n    if (+event.target.value >= getCurrent) {\r\n      setEnd(+event.target.value);\r\n      chrome.storage.sync.set({ end: +event.target.value });\r\n    }\r\n  };\r\n\r\n  const timeAddHandler = () => {\r\n    if (getTimersID.current !== false) {\r\n      alert(\"Can't proceed while timer is active.\");\r\n      return;\r\n    }\r\n\r\n    let x = prompt(\r\n      \"Enter amount of time to load in the following format: h:mm:ss\"\r\n    );\r\n\r\n    let timeArr = x.split(\":\").reverse();\r\n\r\n    if (timeArr.length !== 3) {\r\n      alert(\"Invalid input! Too many or too few fields were input.\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !Number.isInteger(+timeArr[0]) ||\r\n      !Number.isInteger(+timeArr[1]) ||\r\n      !Number.isInteger(+timeArr[2])\r\n    ) {\r\n      alert(\"Invalid input! All fields must be integers.\");\r\n      return;\r\n    }\r\n\r\n    //All checks passed, now we're diving in to the addition.\r\n    let desiredTimeInSeconds =\r\n      +timeArr[0] + +timeArr[1] * 60 + +timeArr[2] * 3600 + getTime.current;\r\n\r\n    setTime(desiredTimeInSeconds);\r\n\r\n    chrome.storage.sync.set({\r\n      savedTime: desiredTimeInSeconds,\r\n    });\r\n  };\r\n\r\n  const nameChangeHandler = () => {\r\n    return \"x\";\r\n  };\r\n\r\n  return (\r\n    <div id=\"popup-container\" className=\"Card\">\r\n      <div className=\"Card-header\">\r\n        <a className=\"headline\">\r\n          <b>Dbkillerex</b>\r\n        </a>\r\n        <a className=\"mode\">ETA Mode</a>\r\n      </div>\r\n\r\n      <div className=\"Card-layout\">\r\n        <div className=\"stats seperated datasection\">\r\n          <div>Stats</div>\r\n          <div>\r\n            You have in total <b>808</b> recorded hours.\r\n          </div>\r\n        </div>\r\n        <div className=\"initialize-data seperated datasection\">\r\n          <div className=\"data-row\">\r\n            <div>Start</div>\r\n            <input type=\"text\" className=\"data-input\" placeholder=\"0\" />\r\n          </div>\r\n          <div className=\"data-row\">\r\n            <div>Progress</div>\r\n            <input type=\"text\" className=\"data-input\" placeholder=\"0\" />\r\n          </div>\r\n          <div className=\"data-row\">\r\n            <div>Finish</div>\r\n            <input type=\"text\" className=\"data-input\" placeholder=\"0\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"actions datasection\">\r\n          <div>Actions</div>\r\n          <div className=\"buttons-container\">\r\n            <button>Reset</button>\r\n            <button>Record</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}