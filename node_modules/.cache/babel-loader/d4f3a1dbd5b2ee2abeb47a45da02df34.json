{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Documents\\\\Projects\\\\river\\\\src\\\\components\\\\ItemData.js\";\n\n/*global chrome*/\nimport styles from \"./ItemData.module.css\";\nimport AnimatedCounter from \"./AnimatedCounter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst playFile = filepath => {\n  var audioPlayer = new Audio(chrome.runtime.getURL(filepath));\n  audioPlayer.play();\n};\n\nconst ItemData = props => {\n  const progressHandler = event => {\n    if (+props.itemMax === +event.target.value) {\n      playFile(\"sounds/complete.mp3\");\n      return;\n    }\n\n    playFile(\"sounds/increment.mp3\");\n  };\n\n  const getETA = () => {\n    let totalProgress = props.progress - props.itemMin;\n    let progressLeft = props.itemMax - props.progress;\n    let totalMins = props.time / 60;\n\n    if (props.time < 1 || totalProgress === 0 || !props.timerID.current && props.itemMax != props.progress) {\n      return \"∞\";\n    }\n\n    if (progressLeft === 0) {\n      if (props.timerID.current) {\n        // come back here and brings this back to life <------------------------------------------\n        // clearTimeout(props.timerID.current);\n        // props.setTimerID(false);\n        chrome.notifications.create(undefined, {\n          title: \"Hi\",\n          message: \"You have completed your quest!\",\n          type: \"basic\"\n        });\n      }\n\n      return \"✅\";\n    }\n\n    const designDigit = num => num < 10 ? \"0\" + num : num;\n\n    let paceInMins = totalProgress / totalMins;\n    let minsPerItem = 1 / paceInMins;\n    let minsLeft = minsPerItem * progressLeft; // let hoursLeft = minsLeft / 60;\n\n    let millisecondsLeft = minsLeft * 60 * 1000;\n    let ETADate = new Date(Date.now() + millisecondsLeft);\n    let dateFormatted = designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\n    return dateFormatted;\n  };\n\n  const getPercentage = () => {\n    let totalProgressMade = props.progress - props.itemMin;\n    let totalProgressPossible = props.itemMax - props.itemMin;\n\n    if (totalProgressPossible === 0) {\n      return 0;\n    }\n\n    return 100 * (totalProgressMade / totalProgressPossible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        className: styles.items,\n        min: \"0\",\n        step: \"1\",\n        onChange: props.onMinChange,\n        value: props.itemMin,\n        disabled: props.timerID.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: event => {\n          props.onCurrentChange(event);\n          progressHandler(event);\n        },\n        min: \"0\",\n        step: \"1\",\n        value: props.progress // disabled={!props.timerID.current}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.items,\n        style: {\n          width: `2.7em`\n        },\n        type: \"number\",\n        onChange: props.onMaxChange,\n        value: props.itemMax,\n        min: \"0\",\n        step: \"1\",\n        disabled: props.timerID.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.items,\n        onClick: () => {\n          props.onCurrentChange({\n            target: {\n              value: props.progress + 1\n            }\n          });\n          progressHandler({\n            target: {\n              value: props.progress + 1\n            }\n          });\n        },\n        type: \"submit\",\n        disabled: +props.progress === +props.itemMax,\n        autofocus: \"true\",\n        children: \"\\u2B06\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: props.timerID.current ? getPercentage() < 100 ? getPercentage() < 50 ? \"rgb(197, 52, 52)\" : \"rgb(209, 135, 51)\" : \"rgb(32, 189, 17)\" : props.progress === props.itemMax && props.itemMax !== 0 ? \"rgb(32, 189, 17)\" : \"rgb(255,255,255)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"0.9em\"\n          },\n          children: [Math.floor(props.time / 60), \" mins. elapsed \\u27F6 \", ` ${getETA()}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: styles.progress,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onResize: e => alert(\"s\") // onTransitionEnd={() => {\n          //   setIsAnimating(0);\n          // }}\n          ,\n          className: styles[`progress-value`],\n          style: {\n            width: getPercentage() + \"%\",\n            background: getPercentage() < 100 ? getPercentage() < 50 ? \"rgb(197, 52, 52)\" : \"rgb(209, 135, 51)\" : \"rgb(32, 189, 17)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimatedCounter, {\n            value: getPercentage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ItemData;\nexport default ItemData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemData\");","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/ItemData.js"],"names":["styles","AnimatedCounter","playFile","filepath","audioPlayer","Audio","chrome","runtime","getURL","play","ItemData","props","progressHandler","event","itemMax","target","value","getETA","totalProgress","progress","itemMin","progressLeft","totalMins","time","timerID","current","notifications","create","undefined","title","message","type","designDigit","num","paceInMins","minsPerItem","minsLeft","millisecondsLeft","ETADate","Date","now","dateFormatted","getHours","getMinutes","getPercentage","totalProgressMade","totalProgressPossible","preventDefault","width","items","onMinChange","onCurrentChange","onMaxChange","color","fontSize","Math","floor","e","alert","background"],"mappings":"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","sourcesContent":["/*global chrome*/\r\nimport styles from \"./ItemData.module.css\";\r\nimport AnimatedCounter from \"./AnimatedCounter\";\r\n\r\nconst playFile = (filepath) => {\r\n  var audioPlayer = new Audio(chrome.runtime.getURL(filepath));\r\n  audioPlayer.play();\r\n};\r\n\r\nconst ItemData = (props) => {\r\n  const progressHandler = (event) => {\r\n    if (+props.itemMax === +event.target.value) {\r\n      playFile(\"sounds/complete.mp3\");\r\n      return;\r\n    }\r\n    playFile(\"sounds/increment.mp3\");\r\n  };\r\n\r\n  const getETA = () => {\r\n    let totalProgress = props.progress - props.itemMin;\r\n    let progressLeft = props.itemMax - props.progress;\r\n    let totalMins = props.time / 60;\r\n\r\n    if (\r\n      props.time < 1 ||\r\n      totalProgress === 0 ||\r\n      (!props.timerID.current && props.itemMax != props.progress)\r\n    ) {\r\n      return \"∞\";\r\n    }\r\n\r\n    if (progressLeft === 0) {\r\n      if (props.timerID.current) {\r\n        // come back here and brings this back to life <------------------------------------------\r\n        // clearTimeout(props.timerID.current);\r\n        // props.setTimerID(false);\r\n        chrome.notifications.create(undefined, {\r\n          title: \"Hi\",\r\n          message: \"You have completed your quest!\",\r\n          type: \"basic\",\r\n        });\r\n      }\r\n      return \"✅\";\r\n    }\r\n\r\n    const designDigit = (num) => (num < 10 ? \"0\" + num : num);\r\n\r\n    let paceInMins = totalProgress / totalMins;\r\n    let minsPerItem = 1 / paceInMins;\r\n    let minsLeft = minsPerItem * progressLeft;\r\n    // let hoursLeft = minsLeft / 60;\r\n    let millisecondsLeft = minsLeft * 60 * 1000;\r\n    let ETADate = new Date(Date.now() + millisecondsLeft);\r\n    let dateFormatted =\r\n      designDigit(ETADate.getHours()) + \":\" + designDigit(ETADate.getMinutes());\r\n\r\n    return dateFormatted;\r\n  };\r\n\r\n  const getPercentage = () => {\r\n    let totalProgressMade = props.progress - props.itemMin;\r\n    let totalProgressPossible = props.itemMax - props.itemMin;\r\n\r\n    if (totalProgressPossible === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return 100 * (totalProgressMade / totalProgressPossible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(event) => event.preventDefault()}>\r\n        <input\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          className={styles.items}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          onChange={props.onMinChange}\r\n          value={props.itemMin}\r\n          disabled={props.timerID.current}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={(event) => {\r\n            props.onCurrentChange(event);\r\n            progressHandler(event);\r\n          }}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          value={props.progress}\r\n          // disabled={!props.timerID.current}\r\n        />\r\n        <input\r\n          className={styles.items}\r\n          style={{ width: `2.7em` }}\r\n          type=\"number\"\r\n          onChange={props.onMaxChange}\r\n          value={props.itemMax}\r\n          min=\"0\"\r\n          step=\"1\"\r\n          disabled={props.timerID.current}\r\n        />\r\n        <button\r\n          className={styles.items}\r\n          onClick={() => {\r\n            props.onCurrentChange({ target: { value: props.progress + 1 } });\r\n            progressHandler({ target: { value: props.progress + 1 } });\r\n          }}\r\n          type=\"submit\"\r\n          disabled={+props.progress === +props.itemMax}\r\n          autofocus=\"true\"\r\n        >\r\n          ⬆️\r\n        </button>\r\n        <br />\r\n        <span\r\n          style={{\r\n            color: props.timerID.current\r\n              ? getPercentage() < 100\r\n                ? getPercentage() < 50\r\n                  ? \"rgb(197, 52, 52)\"\r\n                  : \"rgb(209, 135, 51)\"\r\n                : \"rgb(32, 189, 17)\"\r\n              : props.progress === props.itemMax && props.itemMax !== 0\r\n              ? \"rgb(32, 189, 17)\"\r\n              : \"rgb(255,255,255)\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"0.9em\" }}>\r\n            {Math.floor(props.time / 60)} mins. elapsed ⟶ {` ${getETA()}`}\r\n          </div>\r\n        </span>\r\n        <br />\r\n        <div class={styles.progress}>\r\n          <div\r\n            onResize={(e) => alert(\"s\")}\r\n            // onTransitionEnd={() => {\r\n            //   setIsAnimating(0);\r\n            // }}\r\n            className={styles[`progress-value`]}\r\n            style={{\r\n              width: getPercentage() + \"%\",\r\n              background:\r\n                getPercentage() < 100\r\n                  ? getPercentage() < 50\r\n                    ? \"rgb(197, 52, 52)\"\r\n                    : \"rgb(209, 135, 51)\"\r\n                  : \"rgb(32, 189, 17)\",\r\n            }}\r\n          >\r\n            <AnimatedCounter value={getPercentage()} />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemData;\r\n"]},"metadata":{},"sourceType":"module"}