{"ast":null,"code":"/*global chrome*/import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Timer=function Timer(props){var tickHandler=function tickHandler(){// if (props.timerID !== false) {\nprops.onTick();props.modifyTimerID(setTimeout(function(){tickHandler();},1000));// }\n};var startHandler=function startHandler(){if(props.timerID===false){chrome.storage.sync.get([\"startedRecordingAt\",\"savedTime\"],function(data){if(data.startedRecordingAt===null&&data.savedTime===null){chrome.storage.sync.set({startedRecordingAt:Date.now()});}else{chrome.storage.sync.set({startedRecordingAt:Date.now()-props.value*1000,savedTime:null});}});props.modifyTimerID(setTimeout(function(){tickHandler();},1000));}};var stopHandler=function stopHandler(){useEffect(function(){clearTimeout(props.timerID);props.modifyTimerID(false);chrome.storage.sync.set({startedRecordingAt:null});chrome.storage.sync.set({savedTime:props.value});},[]);// chrome.storage.sync.set({\n//   isTimerOn: false,\n// });\n};var resetHandler=function resetHandler(){stopHandler();// pause time recording\nprops.onTick(true);// remove time recorded, reset = true\nchrome.storage.sync.set({startedRecordingAt:null,savedTime:null});};if(props.value>0){if(!props.timerID){startHandler();}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{disabled:props.value<1,onClick:resetHandler,children:\"\\u23F9\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!props.timerID,onClick:stopHandler,children:\"\\u23F8\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{disabled:props.timerID,onClick:startHandler,children:\"\\u25B6\\uFE0F\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{color:\"white\"},children:[props.timerID,\", \",props.value]}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Timer;","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/Timer.js"],"names":["useEffect","Timer","props","tickHandler","onTick","modifyTimerID","setTimeout","startHandler","timerID","chrome","storage","sync","get","data","startedRecordingAt","savedTime","set","Date","now","value","stopHandler","clearTimeout","resetHandler","color"],"mappings":"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","sourcesContent":["/*global chrome*/\r\nimport { useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    // if (props.timerID !== false) {\r\n    props.onTick();\r\n    props.modifyTimerID(\r\n      setTimeout(() => {\r\n        tickHandler();\r\n      }, 1000)\r\n    );\r\n    // }\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (props.timerID === false) {\r\n      chrome.storage.sync.get([\"startedRecordingAt\", \"savedTime\"], (data) => {\r\n        if (data.startedRecordingAt === null && data.savedTime === null) {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now(),\r\n          });\r\n        } else {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now() - props.value * 1000,\r\n            savedTime: null,\r\n          });\r\n        }\r\n      });\r\n\r\n      props.modifyTimerID(\r\n        setTimeout(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n    }\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    useEffect(() => {\r\n      clearTimeout(props.timerID);\r\n      props.modifyTimerID(false);\r\n\r\n      chrome.storage.sync.set({\r\n        startedRecordingAt: null,\r\n      });\r\n\r\n      chrome.storage.sync.set({\r\n        savedTime: props.value,\r\n      });\r\n    }, []);\r\n\r\n    // chrome.storage.sync.set({\r\n    //   isTimerOn: false,\r\n    // });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    stopHandler(); // pause time recording\r\n    props.onTick(true); // remove time recorded, reset = true\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: null,\r\n    });\r\n  };\r\n\r\n  if (props.value > 0) {\r\n    if (!props.timerID) {\r\n      startHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button disabled={props.value < 1} onClick={resetHandler}>\r\n        ⏹️\r\n      </button>\r\n      <button disabled={!props.timerID} onClick={stopHandler}>\r\n        ⏸️\r\n      </button>\r\n      <button disabled={props.timerID} onClick={startHandler}>\r\n        ▶️\r\n      </button>\r\n      <br />\r\n      <div style={{ color: \"white\" }}>\r\n        {props.timerID}, {props.value}\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}