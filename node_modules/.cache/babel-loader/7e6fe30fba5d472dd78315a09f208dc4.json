{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/*global chrome*/var Timer=function Timer(props){var tickHandler=function tickHandler(){props.onTick();props.setTimerID(setTimeout(function(){tickHandler();},1000));};var startHandler=function startHandler(){if(!props.timerID){chrome.storage.sync.get([\"startedRecordingAt\"],function(data){if(data.startedRecordingAt===null){chrome.storage.sync.set({startedRecordingAt:Date.now(),savedTime:null});}else{chrome.storage.sync.set({startedRecordingAt:Date.now()-props.value*1000,savedTime:null});}});// chrome.storage.sync.set({\n//   isTimerOn: true,\n// });\nprops.setTimerID(setTimeout(function(){tickHandler();},1000));}};var stopHandler=function stopHandler(){clearTimeout(props.timerID);props.setTimerID(false);chrome.storage.sync.set({startedRecordingAt:null,savedTime:props.value});alert(props.timerID);// chrome.storage.sync.set({\n//   isTimerOn: false,\n// });\n};var resetHandler=function resetHandler(){stopHandler();// pause time recording\nprops.onTick(true);// remove time recorded, reset = true\nchrome.storage.sync.set({startedRecordingAt:null,savedTime:null});};if(props.value>0){if(!props.timerID){startHandler();}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{disabled:props.value<1,onClick:resetHandler,children:\"\\u23F9\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!props.timerID,onClick:stopHandler,children:\"\\u23F8\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{disabled:props.timerID,onClick:startHandler,children:\"\\u25B6\\uFE0F\"})]});};export default Timer;","map":{"version":3,"sources":["C:/Users/97252/Documents/Projects/river/src/components/Timer.js"],"names":["Timer","props","tickHandler","onTick","setTimerID","setTimeout","startHandler","timerID","chrome","storage","sync","get","data","startedRecordingAt","set","Date","now","savedTime","value","stopHandler","clearTimeout","alert","resetHandler"],"mappings":"wFAAA,iBAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,KAAK,CAACE,MAAN,GACAF,KAAK,CAACG,UAAN,CACEC,UAAU,CAAC,UAAM,CACfH,WAAW,GACZ,CAFS,CAEP,IAFO,CADZ,EAKD,CAPD,CASA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAI,CAACL,KAAK,CAACM,OAAX,CAAoB,CAClBC,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,CAAC,oBAAD,CAAxB,CAAgD,SAACC,IAAD,CAAU,CACxD,GAAIA,IAAI,CAACC,kBAAL,GAA4B,IAAhC,CAAsC,CACpCL,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,GAApB,CAAwB,CACtBD,kBAAkB,CAAEE,IAAI,CAACC,GAAL,EADE,CAEtBC,SAAS,CAAE,IAFW,CAAxB,EAID,CALD,IAKO,CACLT,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,GAApB,CAAwB,CACtBD,kBAAkB,CAAEE,IAAI,CAACC,GAAL,GAAaf,KAAK,CAACiB,KAAN,CAAc,IADzB,CAEtBD,SAAS,CAAE,IAFW,CAAxB,EAID,CACF,CAZD,EAcA;AACA;AACA;AAEAhB,KAAK,CAACG,UAAN,CACEC,UAAU,CAAC,UAAM,CACfH,WAAW,GACZ,CAFS,CAEP,IAFO,CADZ,EAKD,CACF,CA1BD,CA4BA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBC,YAAY,CAACnB,KAAK,CAACM,OAAP,CAAZ,CACAN,KAAK,CAACG,UAAN,CAAiB,KAAjB,EAEAI,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,GAApB,CAAwB,CACtBD,kBAAkB,CAAE,IADE,CAEtBI,SAAS,CAAEhB,KAAK,CAACiB,KAFK,CAAxB,EAIAG,KAAK,CAACpB,KAAK,CAACM,OAAP,CAAL,CACA;AACA;AACA;AACD,CAZD,CAcA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBH,WAAW,GAAI;AACflB,KAAK,CAACE,MAAN,CAAa,IAAb,EAAoB;AACpBK,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,GAApB,CAAwB,CACtBD,kBAAkB,CAAE,IADE,CAEtBI,SAAS,CAAE,IAFW,CAAxB,EAID,CAPD,CASA,GAAIhB,KAAK,CAACiB,KAAN,CAAc,CAAlB,CAAqB,CACnB,GAAI,CAACjB,KAAK,CAACM,OAAX,CAAoB,CAClBD,YAAY,GACb,CACF,CAED,mBACE,oCACE,eAAQ,QAAQ,CAAEL,KAAK,CAACiB,KAAN,CAAc,CAAhC,CAAmC,OAAO,CAAEI,YAA5C,0BADF,cAIE,eAAQ,QAAQ,CAAE,CAACrB,KAAK,CAACM,OAAzB,CAAkC,OAAO,CAAEY,WAA3C,0BAJF,cAOE,eAAQ,QAAQ,CAAElB,KAAK,CAACM,OAAxB,CAAiC,OAAO,CAAED,YAA1C,0BAPF,GADF,CAaD,CAhFD,CAkFA,cAAeN,CAAAA,KAAf","sourcesContent":["/*global chrome*/\r\n\r\nconst Timer = (props) => {\r\n  const tickHandler = () => {\r\n    props.onTick();\r\n    props.setTimerID(\r\n      setTimeout(() => {\r\n        tickHandler();\r\n      }, 1000)\r\n    );\r\n  };\r\n\r\n  const startHandler = () => {\r\n    if (!props.timerID) {\r\n      chrome.storage.sync.get([\"startedRecordingAt\"], (data) => {\r\n        if (data.startedRecordingAt === null) {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now(),\r\n            savedTime: null,\r\n          });\r\n        } else {\r\n          chrome.storage.sync.set({\r\n            startedRecordingAt: Date.now() - props.value * 1000,\r\n            savedTime: null,\r\n          });\r\n        }\r\n      });\r\n\r\n      // chrome.storage.sync.set({\r\n      //   isTimerOn: true,\r\n      // });\r\n\r\n      props.setTimerID(\r\n        setTimeout(() => {\r\n          tickHandler();\r\n        }, 1000)\r\n      );\r\n    }\r\n  };\r\n\r\n  const stopHandler = () => {\r\n    clearTimeout(props.timerID);\r\n    props.setTimerID(false);\r\n\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: props.value,\r\n    });\r\n    alert(props.timerID);\r\n    // chrome.storage.sync.set({\r\n    //   isTimerOn: false,\r\n    // });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    stopHandler(); // pause time recording\r\n    props.onTick(true); // remove time recorded, reset = true\r\n    chrome.storage.sync.set({\r\n      startedRecordingAt: null,\r\n      savedTime: null,\r\n    });\r\n  };\r\n\r\n  if (props.value > 0) {\r\n    if (!props.timerID) {\r\n      startHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button disabled={props.value < 1} onClick={resetHandler}>\r\n        ⏹️\r\n      </button>\r\n      <button disabled={!props.timerID} onClick={stopHandler}>\r\n        ⏸️\r\n      </button>\r\n      <button disabled={props.timerID} onClick={startHandler}>\r\n        ▶️\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}